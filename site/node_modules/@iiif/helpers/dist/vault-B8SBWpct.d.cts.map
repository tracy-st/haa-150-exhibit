{"version":3,"file":"vault-B8SBWpct.d.cts","names":["Vault","REFS","REACTIVE","DEFINED","PARENT","WrappedObject","OG","ReactiveWrapped","Full","Omit","isWrapped","unwrapObject","wrapObject","Type","NormalizedType","ActionFromType","AllActions","Entities","IIIFStore","NormalizedEntity","PaginationState","RefToNormalized","RequestState","Collection","Manifest","Reference","SpecificResource","SerializeConfig","BatchAction","VaultZustandStore","CollectionNormalized","ManifestNormalized","ReactiveWrapped","VaultOptions","Record","T","Promise","GetOptions","GetObjectOptions","EntityRef","Ref","Vault","Partial","Type","Return","R","Key","NormalizedType","Value"],"sources":["../src/vault/utility/objects.d.ts","../src/vault/vault.d.ts"],"sourcesContent":["import { Vault } from '../vault';\nexport declare const REFS: unique symbol;\nexport declare const REACTIVE: unique symbol;\nexport declare const DEFINED: unique symbol;\nexport declare const PARENT: unique symbol;\nexport type WrappedObject<OG = any> = {\n    subscribe(subscription: (object: any, vault: Vault) => void, skipInitial?: boolean): () => void;\n    reactive(): void;\n    unreactive(): void;\n    refresh(): void;\n    unwrap(): OG;\n    valueOf(): OG;\n    toPresentation3(): any;\n    toPresentation2(): any;\n    is(refOrObject: any): boolean;\n    toJSON(): any;\n};\nexport type ReactiveWrapped<Full = any, T = any> = {} & WrappedObject<Full> & Omit<Full, 'items' | 'annotations' | 'structures' | 'seeAlso' | 'rendering' | 'partOf' | 'start' | 'supplementary' | 'homepage' | 'thumbnail' | 'placeholderCanvas' | 'accompanyingCanvas' | 'provider' | 'body' | 'logo'> & {\n    items: Full extends {\n        items: (infer A)[];\n    } ? (Full['items'][number] & ReactiveWrapped<any, Full['items'][number]>)[] : never;\n    annotations: Full extends {\n        annotations: (infer A)[];\n    } ? ReactiveWrapped<any, Full['annotations'][number]>[] : never;\n    structures: Full extends {\n        structures: (infer A)[];\n    } ? ReactiveWrapped<any, Full['structures'][number]>[] : never;\n    seeAlso: Full extends {\n        seeAlso: (infer A)[];\n    } ? ReactiveWrapped<any, Full['seeAlso'][number]>[] : never;\n    rendering: Full extends {\n        rendering: (infer A)[];\n    } ? ReactiveWrapped<any, Full['rendering'][number]>[] : never;\n    partOf: Full extends {\n        partOf: (infer A)[];\n    } ? ReactiveWrapped<any, Full['partOf'][number]>[] : never;\n    start: Full extends {\n        start: (infer A)[];\n    } ? ReactiveWrapped<any, Full['start'][number]>[] : never;\n    supplementary: Full extends {\n        supplementary: (infer A)[];\n    } ? ReactiveWrapped<any, Full['supplementary'][number]>[] : never;\n    homepage: Full extends {\n        homepage: (infer A)[];\n    } ? ReactiveWrapped<any, Full['homepage'][number]>[] : never;\n    thumbnail: Full extends {\n        thumbnail: (infer A)[];\n    } ? ReactiveWrapped<any, Full['thumbnail'][number]>[] : never;\n    placeholderCanvas: Full extends {\n        placeholderCanvas: (infer A)[];\n    } ? ReactiveWrapped<any, Full['placeholderCanvas'][number]>[] : never;\n    accompanyingCanvas: Full extends {\n        accompanyingCanvas: (infer A)[];\n    } ? ReactiveWrapped<any, Full['accompanyingCanvas'][number]>[] : never;\n    provider: Full extends {\n        provider: (infer A)[];\n    } ? ReactiveWrapped<any, Full['provider'][number]>[] : never;\n    body: Full extends {\n        body: (infer A)[];\n    } ? ReactiveWrapped<any, Full['body'][number]>[] : never;\n    logo: Full extends {\n        logo: (infer A)[];\n    } ? ReactiveWrapped<any, Full['logo'][number]>[] : never;\n};\nexport declare function isWrapped(object: any): object is WrappedObject;\nexport declare function unwrapObject(object: any): any;\nexport declare function wrapObject<Type, NormalizedType = any>(object: any, vault: Vault, reactive?: boolean, parent?: string): ReactiveWrapped<Type, NormalizedType>;\n","import { ActionFromType, AllActions, Entities, IIIFStore, NormalizedEntity, PaginationState, RefToNormalized, RequestState } from './types';\nimport { Collection, Manifest, Reference, SpecificResource } from '@iiif/presentation-3';\nimport { SerializeConfig } from '@iiif/parser';\nimport { BatchAction } from './actions';\nimport { VaultZustandStore } from './store';\nimport { CollectionNormalized, ManifestNormalized } from '@iiif/presentation-3-normalized';\nimport { ReactiveWrapped } from './utility/objects';\nexport type VaultOptions = {\n    reducers: Record<string, any>;\n    defaultState?: IIIFStore;\n    customFetcher: <T>(url: string, options: T) => unknown | Promise<unknown>;\n    enableDevtools: boolean;\n};\nexport type GetOptions = {\n    skipSelfReturn?: boolean;\n    parent?: Reference<any> | string;\n    preserveSpecificResources?: boolean;\n    skipPartOfCheck?: boolean;\n};\nexport type GetObjectOptions = GetOptions & {\n    reactive?: boolean;\n};\nexport type EntityRef<Ref extends keyof Entities> = IIIFStore['iiif']['entities'][Ref][string];\nexport declare class Vault {\n    private readonly options;\n    private readonly store;\n    private readonly emitter;\n    private isBatching;\n    private batchQueue;\n    remoteFetcher: (str: string, options?: any, mapper?: (resource: any) => any) => Promise<NormalizedEntity | undefined>;\n    staticFetcher: (str: string, json: any, mapper?: (resource: any) => any) => Promise<NormalizedEntity | undefined> | NormalizedEntity | undefined;\n    constructor(options?: Partial<VaultOptions>, store?: VaultZustandStore);\n    defaultFetcher: (url: string) => Promise<any>;\n    batch(cb: (vault: this) => void): void;\n    asyncBatch(cb: (vault: this) => Promise<void> | void): Promise<void>;\n    modifyEntityField(entity: Reference<keyof Entities>, key: string, value: any): void;\n    dispatch(action: AllActions | BatchAction): void;\n    on<Type extends AllActions['type']>(event: Type | `after:${Type}`, handler: (ctx: {\n        action: ActionFromType<Type>;\n        state: IIIFStore;\n    }) => void): () => void;\n    serialize<Return>(entity: Reference<keyof Entities>, config: SerializeConfig): Return;\n    toPresentation2<Return>(entity: Reference<keyof Entities>): Return;\n    toPresentation3<Return>(entity: Reference<keyof Entities>): Return;\n    hydrate<R extends {\n        type?: string;\n    }>(reference: string | Partial<R>, type?: string | GetOptions, options?: GetOptions): RefToNormalized<R>;\n    hydrate<R extends {\n        type?: string;\n    }>(reference: string[] | Partial<R>[], type?: string | GetOptions, options?: GetOptions): RefToNormalized<R>[];\n    get<R extends {\n        type?: string;\n    }>(reference: string | Partial<R> | Reference<R['type']> | SpecificResource<R>, type?: string | GetOptions, options?: GetOptions): RefToNormalized<R>;\n    get<R extends {\n        type?: string;\n    }>(reference: string[] | Partial<R>[] | Reference<R['type']>[] | SpecificResource<R>[], type?: string | GetOptions, options?: GetOptions): RefToNormalized<R>[];\n    select<R>(selector: (state: IIIFStore) => R): R;\n    getStore(): VaultZustandStore;\n    getState(): IIIFStore;\n    deep(input?: any, prev?: any): any;\n    loadManifest(id: string | Reference<any>, json?: unknown, mapper?: (resource: any) => any): Promise<ManifestNormalized | undefined>;\n    loadCollection(id: string | Reference<any>, json?: unknown, mapper?: (resource: any) => any): Promise<CollectionNormalized | undefined>;\n    load<T>(id: string | Reference<any>, json?: unknown, mapper?: (resource: any) => any): Promise<T | undefined>;\n    loadSync<T>(id: string | Reference<any>, json: unknown, mapper?: (resource: any) => any): T | undefined;\n    loadManifestSync(id: string | Reference<any>, json: unknown, mapper?: (resource: any) => any): ManifestNormalized | undefined;\n    loadCollectionSync(id: string | Reference<any>, json: unknown, mapper?: (resource: any) => any): CollectionNormalized | undefined;\n    areInputsEqual(newInputs: readonly unknown[] | unknown, lastInputs: readonly unknown[] | unknown): boolean;\n    subscribe<T>(selector: (state: IIIFStore) => T, subscription: (state: T, vault: Vault) => void, skipInitial: boolean): () => void;\n    subscribe<T>(subscription: (state: T, vault: Vault) => void, skipInitial?: boolean): () => void;\n    ensureLoaded(_id: string | Reference<any>): Promise<void>;\n    requestStatus(id: string): RequestState[any] | undefined;\n    getPaginationState<T = any>(resource: string | Reference): PaginationState | null;\n    loadNextPage(resource: string | Reference, json?: any): Promise<[PaginationState | null, CollectionNormalized | null]>;\n    getResourceMeta<T = any>(resource: string): Partial<T> | undefined;\n    getResourceMeta<T = any, Key extends keyof T = keyof T>(resource: string, metaKey: Key): T[Key] | undefined;\n    getObject<R extends {\n        type?: string;\n    }>(reference: string | Partial<R>, type?: string | GetObjectOptions, options?: GetObjectOptions): RefToNormalized<R>;\n    loadObject<Type, NormalizedType = any>(id: string | Reference<any>, json?: any): Promise<ReactiveWrapped<Type, NormalizedType>>;\n    loadManifestObject(id: string | Reference<any>, json?: any): Promise<ReactiveWrapped<Manifest, ManifestNormalized>>;\n    loadCollectionObject(id: string | Reference<any>, json?: any): Promise<ReactiveWrapped<Collection, CollectionNormalized>>;\n    wrapObject<T extends string>(objectType: Reference<T>): ReactiveWrapped<unknown, any>;\n    isWrapped(object: any): boolean;\n    setMetaValue<Value = any>([id, meta, key]: [string, string, string], newValueOrUpdate: Value | ((oldValue: Value | undefined) => Value)): void;\n}\n"],"mappings":"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"}