const e=e=>{let t,n=new Set,r=(e,r)=>{let i=typeof e==`function`?e(t):e;if(!Object.is(i,t)){let e=t;t=r??(typeof i!=`object`||!i)?i:Object.assign({},t,i),n.forEach(n=>n(t,e))}},i=()=>t,a=()=>l,o=e=>(n.add(e),()=>n.delete(e)),s=()=>{(import.meta.env?import.meta.env.MODE:void 0)!==`production`&&console.warn("[DEPRECATED] The `destroy` method will be unsupported in a future version. Instead use unsubscribe function returned by subscribe. Everything will be garbage-collected if store is garbage-collected."),n.clear()},c={setState:r,getState:i,getInitialState:a,subscribe:o,destroy:s},l=t=e(r,i,c);return c},t=t=>t?e(t):e;export{t as createStore};
//# sourceMappingURL=vanilla-CQtPfF5u.js.map