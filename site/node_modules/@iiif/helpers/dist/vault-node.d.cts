import { EntityRef as EntityRef$1, Vault as Vault$1, VaultOptions as VaultOptions$1 } from "./vault-B8SBWpct.cjs";
import { ActionFromType, AllActions, Entities, EntityStore, IIIFStore, MetaState, NormalizedEntity, PaginationState, Reducer, RefToFull, RefToNormalized, RequestState } from "./batch-actions-D7V5t4hj.cjs";
import { VaultZustandStore } from "./index-CFeXWhmD.cjs";

//#region src/vault-node.d.ts
type VaultOptions = VaultOptions$1;
type EntityRef<Ref extends keyof Entities> = EntityRef$1<Ref>;
declare class Vault extends Vault$1 {
  constructor(options?: Partial<VaultOptions>, store?: VaultZustandStore);
}
declare function globalVault(options?: VaultOptions): any;
//#endregion
export { ActionFromType, AllActions, Entities, EntityRef, EntityStore, IIIFStore, MetaState, NormalizedEntity, PaginationState, Reducer, RefToFull, RefToNormalized, RequestState, Vault, VaultOptions, globalVault };
//# sourceMappingURL=vault-node.d.cts.map