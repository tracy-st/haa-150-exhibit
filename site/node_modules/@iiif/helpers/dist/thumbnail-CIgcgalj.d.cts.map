{"version":3,"file":"thumbnail-CIgcgalj.d.cts","names":["CollectionItemSchemas","ContentResource","Reference","AnnotationNormalized","AnnotationPageNormalized","CanvasNormalized","CollectionNormalized","ManifestNormalized","CompatVault","FixedSizeImage","FixedSizeImageService","ImageCandidate","ImageCandidateRequest","ImageServiceLoader","UnknownSizeImage","VariableSizeImage","imageServiceLoader","ThumbnailInput","ThumbnailOutput","Array","Promise","getThumbnail","vault","dereference","createThumbnailHelper"],"sources":["../src/thumbnail.d.ts"],"sourcesContent":["import { CollectionItemSchemas, ContentResource, Reference } from '@iiif/presentation-3';\nimport { AnnotationNormalized, AnnotationPageNormalized, CanvasNormalized, CollectionNormalized, ManifestNormalized } from '@iiif/presentation-3-normalized';\nimport { CompatVault } from './compat';\nimport { FixedSizeImage, FixedSizeImageService, ImageCandidate, ImageCandidateRequest, ImageServiceLoader, UnknownSizeImage, VariableSizeImage } from './image-service';\nexport declare const imageServiceLoader: ImageServiceLoader;\nexport type ThumbnailInput = string | Reference<CollectionItemSchemas> | Reference<'Collection'> | Reference<'Manifest'> | Reference<'Canvas'> | Reference<'Annotation'> | Reference<'AnnotationPage'> | Reference<'ContentResource'> | CollectionNormalized | ManifestNormalized | CanvasNormalized | AnnotationNormalized | AnnotationPageNormalized | ContentResource | undefined;\nexport type ThumbnailOutput = Promise<{\n    best: null | undefined | FixedSizeImage | FixedSizeImageService | VariableSizeImage | UnknownSizeImage;\n    fallback: Array<ImageCandidate>;\n    log: string[];\n}>;\nexport declare function getThumbnail(input: ThumbnailInput, { vault, dereference, ...options }?: ImageCandidateRequest & {\n    vault?: CompatVault;\n    dereference?: boolean;\n}): ThumbnailOutput;\nexport declare function createThumbnailHelper(vault?: CompatVault, dependencies?: {\n    imageServiceLoader?: ImageServiceLoader;\n}): {\n    getBestThumbnailAtSize: (input: ThumbnailInput, request: ImageCandidateRequest, dereference?: boolean, candidates?: Array<ImageCandidate>, dimensions?: {\n        width: number;\n        height: number;\n    }) => ThumbnailOutput;\n};\n"],"mappings":";;;;;;cAIqBgB,oBAAoBH;KAC7BI,cAAAA,YAA0Bf,UAAUF,yBAAyBE,0BAA0BA,wBAAwBA,sBAAsBA,0BAA0BA,8BAA8BA,+BAA+BI,uBAAuBC,qBAAqBF,mBAAmBF,uBAAuBC,2BAA2BH;AADpUe,KAETE,eAAAA,GAAkBE,OAFWP,CAAAA;EAC7BI,IAAAA,EAAAA,IAAAA,GAAAA,SAAc,GAEGR,cAFH,GAEoBC,qBAFpB,GAE4CK,iBAF5C,GAEgED,gBAFhE;EAAA,QAAA,EAGZK,KAHY,CAGNR,cAHM,CAAA;KAAsBX,EAAAA,MAAAA,EAAAA;;AAAyBE,iBAMjDmB,YAAAA,CANiDnB,KAAAA,EAM7Be,cAN6Bf,EAAAA;EAAAA,KAAAA;EAAAA,WAAAA;EAAAA,GAAAA;EAAAA,EAMwBU,qBANxBV,GAAAA;OAA0BA,CAAAA,EAOvFM,WAPuFN;aAAwBA,CAAAA,EAAAA,OAAAA;IASvHgB,eAT6IhB;AAA0BA,iBAUnJsB,qBAAAA,CAVmJtB,KAAAA,CAAAA,EAUrHM,WAVqHN,EAAAA,aAAAA,EAAAA;oBAA8BA,CAAAA,EAWhLW,kBAXgLX;;wBAAsDK,EAAAA,CAAAA,KAAAA,EAa3NU,cAb2NV,EAAAA,OAAAA,EAalMK,qBAbkML,EAAAA,WAAAA,CAAAA,EAAAA,OAAAA,EAAAA,UAAAA,CAAAA,EAavIY,KAbuIZ,CAajII,cAbiIJ,CAAAA,EAAAA,WAAAA,EAAAA;IAAqBF,KAAAA,EAAAA,MAAAA;IAAmBF,MAAAA,EAAAA,MAAAA;KAAuBC,GAgBpTc,eAhBoTd"}