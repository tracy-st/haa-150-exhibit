{"version":3,"file":"i18n-BypEYFdV.js","names":["root","inverseIdx","skip: string[]"],"sources":["../src/i18n.ts"],"sourcesContent":["import { Traverse } from '@iiif/parser';\nimport { Canvas, Collection, InternationalString, Manifest } from '@iiif/presentation-3';\n\nexport function getClosestLanguage(\n  i18nLanguage: string | undefined,\n  languages: string[],\n  i18nLanguages: string[] = [],\n  strictFallback = false,\n  skipLanguages: string[] = []\n) {\n  if (skipLanguages.length) {\n    languages = languages.filter((l) => skipLanguages.indexOf(l) === -1);\n  }\n\n  if (!languages || languages.length === 0) {\n    return undefined;\n  }\n\n  // Only one option.\n  if (languages.length === 1) {\n    return languages[0];\n  }\n\n  if (!i18nLanguage) {\n    if (languages.indexOf('none') !== -1) {\n      return 'none';\n    }\n    return languages[0];\n  }\n\n  // Exact match.\n  if (languages.indexOf(i18nLanguage) !== -1) {\n    return i18nLanguage;\n  }\n\n  // Root match (en-us === en)\n  const root = i18nLanguage.indexOf('-') !== -1 ? i18nLanguage.slice(0, i18nLanguage.indexOf('-')) : null;\n  if (root && languages.indexOf(root) !== -1) {\n    return root;\n  }\n\n  // All of the fall backs.\n  for (const lang of i18nLanguages) {\n    if (languages.indexOf(lang) !== -1) {\n      return lang;\n    }\n  }\n\n  if (!strictFallback && i18nLanguage) {\n    // Inverse root match (en === en-us)\n    const inverseRoot = languages.map((l) => (l.indexOf('-') !== -1 ? l.slice(0, l.indexOf('-')) : null));\n    const inverseIdx = inverseRoot.indexOf(i18nLanguage);\n    if (inverseIdx !== -1) {\n      return languages[inverseIdx];\n    }\n\n    // Inverse root (fallback)\n    for (const lang of i18nLanguages) {\n      const root = lang.indexOf('-') !== -1 ? lang.slice(0, lang.indexOf('-')) : null;\n      const inverseIdx = root ? languages.indexOf(root) : -1;\n      if (inverseIdx !== -1) {\n        return languages[inverseIdx];\n      }\n    }\n  }\n\n  if (languages.indexOf('none') !== -1) {\n    return 'none';\n  }\n\n  // Catch some legacy\n  if (languages.indexOf('@none') !== -1) {\n    return '@none';\n  }\n\n  // Finally, fall back to the first.\n  return languages[0];\n}\n\nexport function buildLocaleString(\n  inputText: string | InternationalString | null | undefined,\n  i18nLanguage: string | undefined,\n  options: {\n    strictFallback?: boolean;\n    defaultText?: string;\n    separator?: string;\n    fallbackLanguages?: string[];\n    closest?: boolean;\n    skipLanguages?: string[];\n  } = {}\n) {\n  const {\n    strictFallback = false,\n    defaultText = '',\n    separator = '\\n',\n    fallbackLanguages = [],\n    closest,\n    skipLanguages,\n  } = options;\n  const languages = Object.keys(inputText || {});\n  const language = closest\n    ? i18nLanguage\n    : getClosestLanguage(i18nLanguage, languages, fallbackLanguages, strictFallback, skipLanguages);\n\n  if (!inputText) {\n    return defaultText;\n  }\n\n  if (typeof inputText === 'string') {\n    return inputText;\n  }\n\n  const candidateText = language ? inputText[language] : undefined;\n  if (candidateText && language) {\n    // Slightly tolerant of typos in IIIF like: `{\"en\": \"Some value\"}`\n    if (typeof candidateText === 'string') {\n      return candidateText;\n    }\n    // Skip empty strings.\n    if (candidateText.length === 1 && candidateText[0] === '') {\n      const skip: string[] = options.skipLanguages || [];\n      return buildLocaleString(inputText, i18nLanguage, {\n        ...options,\n        skipLanguages: [...skip, language],\n      });\n    }\n    return candidateText.join(separator);\n  }\n\n  return '';\n}\n\nexport function getValue(\n  inputText: string | InternationalString | null | undefined,\n  options: { language?: string; defaultText?: string; separator?: string; fallbackLanguages?: string[] } = {}\n) {\n  return buildLocaleString(\n    inputText,\n    options.language || (typeof navigator !== 'undefined' ? navigator.language : 'en'),\n    options\n  );\n}\n\nfunction getLanguagesFromLanguageMap(languageMap: InternationalString) {\n  if (!languageMap) return [];\n  if (typeof languageMap === 'string') return [];\n  if (Array.isArray(languageMap)) return [];\n  return Object.keys(languageMap).filter((l) => l !== 'none');\n}\n\nexport function getAvailableLanguagesFromResource(item: Collection | Manifest | Canvas | Range) {\n  const foundLanguages = new Set();\n\n  const findLanguages = Traverse.all((resource: any) => {\n    // List of properties that can contain language.\n    // - language\n    // - summary\n    // - required statement (label, value)\n    // - metadata pairs (array of label, value)\n\n    if ('label' in resource) {\n      const languages = getLanguagesFromLanguageMap(resource.label);\n      languages.forEach((l) => foundLanguages.add(l));\n    }\n\n    if ('summary' in resource) {\n      const languages = getLanguagesFromLanguageMap(resource.summary);\n      languages.forEach((l) => foundLanguages.add(l));\n    }\n\n    if ('language' in resource) {\n      if (typeof resource.language === 'string') {\n        foundLanguages.add(resource.language);\n      }\n    }\n\n    if ('requiredStatement' in resource) {\n      if (resource.requiredStatement && !Array.isArray(resource.requiredStatement)) {\n        if ('label' in resource.requiredStatement) {\n          const languages = getLanguagesFromLanguageMap(resource.requiredStatement.label);\n          languages.forEach((l) => foundLanguages.add(l));\n        }\n        if ('value' in resource.requiredStatement) {\n          const languages = getLanguagesFromLanguageMap(resource.requiredStatement.value);\n          languages.forEach((l) => foundLanguages.add(l));\n        }\n      }\n    }\n\n    if ('metadata' in resource) {\n      if (Array.isArray(resource.metadata)) {\n        (resource.metadata as any[]).forEach((m) => {\n          if ('label' in m) {\n            const languages = getLanguagesFromLanguageMap(m.label);\n            languages.forEach((l) => foundLanguages.add(l));\n          }\n          if ('value' in m) {\n            const languages = getLanguagesFromLanguageMap(m.value);\n            languages.forEach((l) => foundLanguages.add(l));\n          }\n        });\n      }\n    }\n  });\n\n  findLanguages.traverseUnknown(item);\n\n  return Array.from(foundLanguages);\n}\n\nexport const iiifString = createStringHelper();\n\nexport function createStringHelper(options: { language?: string; defaultText?: string; separator?: string; fallbackLanguages?: string[] } = {}) {\n  return (template: TemplateStringsArray, ...params: Array<null | string[] | undefined | string | InternationalString>) => {\n    let result = '';\n\n    for (let i = 0; i < template.length; i++) {\n      // Add the template part\n      result += template[i];\n\n      // If there's a parameter for this position\n      if (i < params.length) {\n        const param = params[i];\n\n        if (param === null || param === undefined) {\n          // Skip null or undefined params\n          continue;\n        } else if (typeof param === 'string') {\n          // Add string params directly\n          result += param;\n        } else {\n          // For InternationalString objects, get the value using the getValue function\n          // which will handle localization based on the user's language\n          result += getValue(param as any, options);\n        }\n      }\n    }\n\n    return result;\n  }\n}\n"],"mappings":"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"}