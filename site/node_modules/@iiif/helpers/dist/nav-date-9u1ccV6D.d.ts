import { CompatVault } from "./compat-ClH8bhTh.js";
import { Collection, InternationalString, Manifest } from "@iiif/presentation-3";
import { CollectionNormalized, ManifestNormalized } from "@iiif/presentation-3-normalized";

//#region src/nav-date.d.ts
interface DateNavigationResource {
  id: string;
  type: 'Manifest' | 'Canvas';
  label: InternationalString;
  navDate: string;
}
interface DateNavigationDay {
  id: string;
  type: 'day';
  count: number;
  label: InternationalString;
  day: number;
  items: Array<DateNavigationResource>;
}
interface DateNavigationMonth {
  id: string;
  type: 'month';
  month: number;
  count: number;
  label: InternationalString;
  items: Array<DateNavigationDay>;
}
interface DateNavigationYear {
  id: string;
  type: 'year';
  year: number;
  count: number;
  label: InternationalString;
  items: Array<DateNavigationMonth>;
}
interface DateNavigationDecade {
  id: string;
  type: 'decade';
  yearStart: number;
  yearEnd: number;
  label: InternationalString;
  count: number;
  items: Array<DateNavigationYear>;
}
interface DateNavigationCentury {
  id: string;
  type: 'century';
  yearStart: number;
  yearEnd: number;
  label: InternationalString;
  count: number;
  items: Array<DateNavigationDecade>;
}
type DateNavigationTypes = DateNavigationCentury | DateNavigationDecade | DateNavigationYear | DateNavigationMonth | DateNavigationDay;
declare function createDateNavigation<T extends DateNavigationTypes, Type = T['type']>(vault: CompatVault, manifestOrCollection: Manifest | Collection | ManifestNormalized | CollectionNormalized | string, inputType?: Type): T[];
//#endregion
export { DateNavigationCentury, DateNavigationDay, DateNavigationDecade, DateNavigationMonth, DateNavigationResource, DateNavigationTypes, DateNavigationYear, createDateNavigation };
//# sourceMappingURL=nav-date-9u1ccV6D.d.ts.map