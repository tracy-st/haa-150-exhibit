{"version":3,"file":"sequences-DtbSBPtk.js","names":["ordering: number[][]","currentOrdering: number[]"],"sources":["../src/sequences.ts"],"sourcesContent":["import { Reference } from '@iiif/presentation-3';\nimport { CanvasNormalized, ManifestNormalized, RangeNormalized } from '@iiif/presentation-3-normalized';\nimport { findAllCanvasesInRange } from './ranges';\nimport { compatVault, CompatVault } from './compat';\n\nexport function createSequenceHelper(vault: CompatVault = compatVault) {\n  return {\n    getVisibleCanvasesFromCanvasId: (\n      manifestOrRange: ManifestNormalized | RangeNormalized,\n      canvasId: string | null,\n      preventPaged = false\n    ) => getVisibleCanvasesFromCanvasId(vault, manifestOrRange, canvasId, preventPaged),\n    getManifestSequence: (\n      manifestOrRange: ManifestNormalized | RangeNormalized,\n      options: { disablePaging?: boolean; skipNonPaged?: boolean } = {}\n    ) => getManifestSequence(vault, manifestOrRange, options),\n  };\n}\n\n/**\n * Get visible canvases from canvas ID\n *\n * This function returns a list of canvas references that should all be displayed\n * when the passed canvasId is visible. This should work for individual items,\n * 2-up paged view and continuous (scrolls).\n *\n * The options are listed below (from IIIF docs)\n *\n * - `unordered` - Valid on Collections, Manifests and Ranges. The Canvases included in resources that have this behavior\n *    have no inherent order, and user interfaces should avoid implying an order to the user. Disjoint with individuals,\n *    continuous, and paged.\n *\n * - `individuals` - Valid on Collections, Manifests, and Ranges. For Collections that have this behavior, each of the\n *    included Manifests are distinct objects in the given order. For Manifests and Ranges, the included Canvases are\n *    distinct views, and should not be presented in a page-turning interface. This is the default layout behavior if\n *    not specified. Disjoint with unordered, continuous, and paged.\n *\n * - `continuous`  Valid on Collections, Manifests and Ranges, which include Canvases that have at least height and\n *    width dimensions. Canvases included in resources that have this behavior are partial views and an appropriate\n *    rendering might display all of the Canvases virtually stitched together, such as a long scroll split into\n *    sections. This behavior has no implication for audio resources. The viewingDirection of the Manifest will\n *    determine the appropriate arrangement of the Canvases. Disjoint with unordered, individuals and paged.\n *\n * - `paged`  Valid on Collections, Manifests and Ranges, which include Canvases that have at least height and width\n *    dimensions. Canvases included in resources that have this behavior represent views that should be presented in\n *    a page-turning interface if one is available. The first canvas is a single view (the first recto) and thus the\n *    second canvas likely represents the back of the object in the first canvas. If this is not the case, see the\n *    behavior value non-paged. Disjoint with unordered, individuals, continuous, facing-pages and non-paged.\n *\n */\nexport function getVisibleCanvasesFromCanvasId(\n  vault: CompatVault = compatVault,\n  manifestOrRange: ManifestNormalized | RangeNormalized,\n  canvasId: string | null,\n  preventPaged = false\n): Reference<'Canvas'>[] {\n  const behavior = manifestOrRange.behavior || [];\n  const fullCanvas = canvasId ? vault.get<CanvasNormalized>(canvasId) : null;\n  if (!fullCanvas) {\n    return [];\n  }\n\n  const canvasBehavior = fullCanvas.behavior || [];\n  const isPaged = preventPaged ? false : behavior.includes('paged');\n  const isContinuous = isPaged ? false : behavior.includes('continuous');\n  const isIndividuals = isPaged || isContinuous ? false : behavior.includes('individuals');\n  const isCanvasFacingPages = canvasBehavior.includes('facing-pages');\n  const isCanvasNonPaged = canvasBehavior.includes('non-paged');\n\n  // Individuals should just be the default.\n  if (isCanvasFacingPages || isCanvasNonPaged || isIndividuals || preventPaged) {\n    return [{ id: fullCanvas.id, type: 'Canvas' }];\n  }\n\n  const [manifestItems, ordering] = getManifestSequence(vault, manifestOrRange);\n\n  // Continuous should just return all items together.\n  if (isContinuous) {\n    return manifestItems;\n  }\n\n  const canvasIndex = manifestItems.findIndex((r) => r.id === canvasId);\n  if (canvasIndex === -1) {\n    return [];\n  }\n\n  for (const indexes of ordering) {\n    if (indexes.includes(canvasIndex)) {\n      return indexes.map((index) => manifestItems[index]);\n    }\n  }\n\n  return [{ id: fullCanvas.id, type: 'Canvas' }];\n}\n\nexport function getManifestSequence(\n  vault: CompatVault = compatVault,\n  manifestOrRange: ManifestNormalized | RangeNormalized,\n  { disablePaging, skipNonPaged }: { disablePaging?: boolean; skipNonPaged?: boolean } = {}\n): [Reference<'Canvas'>[], number[][]] {\n  const behavior = manifestOrRange.behavior || [];\n  const isPaged = behavior.includes('paged');\n  const isContinuous = isPaged ? false : behavior.includes('continuous');\n  const isIndividuals = isPaged || isContinuous ? false : behavior.includes('individuals');\n  const manifestItems =\n    manifestOrRange.type === 'Manifest' ? manifestOrRange.items : findAllCanvasesInRange(vault, manifestOrRange);\n\n  // Continuous should just return all items together.\n  if (isContinuous) {\n    return [manifestItems, [manifestItems.map((_, index) => index)]];\n  }\n\n  // Individuals should just be the default.\n  if (isIndividuals || !isPaged || disablePaging) {\n    return [manifestItems, manifestItems.map((_, index) => [index])];\n  }\n\n  // This is the tricky case.\n  const ordering: number[][] = [];\n  let currentOrdering: number[] = [];\n\n  const flush = () => {\n    if (currentOrdering.length) {\n      ordering.push([...currentOrdering]);\n      currentOrdering = [];\n    }\n  };\n\n  let offset = 0;\n  let flushNextPaged = false;\n  for (let i = 0; i < manifestItems.length; i++) {\n    const canvas = vault.get<CanvasNormalized>(manifestItems[i]);\n    const canvasBehavior = canvas.behavior || [];\n    if (canvasBehavior.includes('non-paged')) {\n      if (i === offset) {\n        offset++;\n      }\n      if (!skipNonPaged) {\n        flush();\n        ordering.push([i]);\n        flush();\n      }\n      continue;\n    }\n\n    if (i === offset || canvasBehavior.includes('facing-pages')) {\n      // Flush and push a single.\n      if (currentOrdering.length) {\n        flushNextPaged = true;\n      }\n      flush();\n      ordering.push([i]);\n      flush();\n      continue;\n    }\n\n    currentOrdering.push(i);\n\n    if (flushNextPaged) {\n      flush();\n      flushNextPaged = false;\n      continue;\n    }\n\n    if (currentOrdering.length > 1) {\n      flush();\n    }\n  }\n\n  if (currentOrdering.length) {\n    flush();\n  }\n\n  return [manifestItems, ordering];\n}\n"],"mappings":"iHAKA,SAAgB,EAAqB,EAAqB,EAAa,CACrE,MAAO,CACL,gCACE,EACA,EACA,EAAe,KACZ,EAA+B,EAAO,EAAiB,EAAU,GACtE,qBACE,EACA,EAA+D,KAC5D,EAAoB,EAAO,EAAiB,IAmCrD,SAAgB,EACd,EAAqB,EACrB,EACA,EACA,EAAe,GACQ,CACvB,IAAM,EAAW,EAAgB,UAAY,GACvC,EAAa,EAAW,EAAM,IAAsB,GAAY,KACtE,GAAI,CAAC,EACH,MAAO,GAGT,IAAM,EAAiB,EAAW,UAAY,GACxC,EAAU,EAAe,GAAQ,EAAS,SAAS,SACnD,EAAe,EAAU,GAAQ,EAAS,SAAS,cACnD,EAAgB,GAAW,EAAe,GAAQ,EAAS,SAAS,eACpE,EAAsB,EAAe,SAAS,gBAC9C,EAAmB,EAAe,SAAS,aAGjD,GAAI,GAAuB,GAAoB,GAAiB,EAC9D,MAAO,CAAC,CAAE,GAAI,EAAW,GAAI,KAAM,WAGrC,GAAM,CAAC,EAAe,GAAY,EAAoB,EAAO,GAG7D,GAAI,EACF,OAAO,EAGT,IAAM,EAAc,EAAc,UAAW,GAAM,EAAE,KAAO,GAC5D,GAAI,IAAgB,GAClB,MAAO,GAGT,IAAK,IAAM,KAAW,EACpB,GAAI,EAAQ,SAAS,GACnB,OAAO,EAAQ,IAAK,GAAU,EAAc,IAIhD,MAAO,CAAC,CAAE,GAAI,EAAW,GAAI,KAAM,WAGrC,SAAgB,EACd,EAAqB,EACrB,EACA,CAAE,gBAAe,gBAAsE,GAClD,CACrC,IAAM,EAAW,EAAgB,UAAY,GACvC,EAAU,EAAS,SAAS,SAC5B,EAAe,EAAU,GAAQ,EAAS,SAAS,cACnD,EAAgB,GAAW,EAAe,GAAQ,EAAS,SAAS,eACpE,EACJ,EAAgB,OAAS,WAAa,EAAgB,MAAQ,EAAuB,EAAO,GAG9F,GAAI,EACF,MAAO,CAAC,EAAe,CAAC,EAAc,KAAK,EAAG,IAAU,KAI1D,GAAI,GAAiB,CAAC,GAAW,EAC/B,MAAO,CAAC,EAAe,EAAc,KAAK,EAAG,IAAU,CAAC,KAI1D,IAAMA,EAAuB,GACzBC,EAA4B,GAE1B,MAAc,CACd,EAAgB,SAClB,EAAS,KAAK,CAAC,GAAG,IAClB,EAAkB,KAIlB,EAAS,EACT,EAAiB,GACrB,IAAK,IAAI,EAAI,EAAG,EAAI,EAAc,OAAQ,IAAK,CAC7C,IAAM,EAAS,EAAM,IAAsB,EAAc,IACnD,EAAiB,EAAO,UAAY,GAC1C,GAAI,EAAe,SAAS,aAAc,CACpC,IAAM,GACR,IAEG,IACH,IACA,EAAS,KAAK,CAAC,IACf,KAEF,SAGF,GAAI,IAAM,GAAU,EAAe,SAAS,gBAAiB,CAEvD,EAAgB,SAClB,EAAiB,IAEnB,IACA,EAAS,KAAK,CAAC,IACf,IACA,SAKF,GAFA,EAAgB,KAAK,GAEjB,EAAgB,CAClB,IACA,EAAiB,GACjB,SAGE,EAAgB,OAAS,GAC3B,IAQJ,OAJI,EAAgB,QAClB,IAGK,CAAC,EAAe"}