import { ParsedSelector } from "./target-types-BJezsRPm.js";
import "./annotation-targets-Dy95F_Rn.js";
import "./batch-actions-BdZYnFZU.js";
import "./index-BRtYVfIz.js";
import "./vault-BnIdusnp.js";
import "./vault-B-x6izuG.js";
import { CompatVault } from "./compat-ClH8bhTh.js";
import { AnnotationPage, Canvas, Manifest } from "@iiif/presentation-3";
import { AnnotationPageNormalized, CanvasNormalized, ManifestNormalized } from "@iiif/presentation-3-normalized";

//#region src/transcriptions.d.ts
interface Transcription {
  id: string;
  source: any;
  plaintext: string;
  segments: Array<{
    text: string;
    textRaw: string;
    granularity?: 'word' | 'line' | 'paragraph' | 'block' | 'page';
    language?: string;
    selector?: ParsedSelector;
    startRaw?: string;
    endRaw?: string;
  }>;
}
declare function canvasHasTranscriptionSync(vault: CompatVault, canvasRef: Canvas | CanvasNormalized | string, annotationPages?: AnnotationPage[] | AnnotationPageNormalized[]): boolean;
declare function canvasLoadExternalAnnotationPages(vault: CompatVault, canvasRef: Canvas): Promise<AnnotationPage[]>;
declare function canvasLoadExternalAnnotationPages(vault: CompatVault, canvasRef: CanvasNormalized): Promise<AnnotationPageNormalized[]>;
declare function timeStampToSeconds(time: string): number;
declare function vttToTranscription(vtt: string, id: string): Promise<Transcription | null>;
declare function annotationPageToTranscription(vault: CompatVault, annotationPage: AnnotationPageNormalized | AnnotationPage): Promise<Transcription | null>;
declare function getCanvasTranscription(vault: CompatVault, canvasRef: Canvas, networkCache?: Record<string, any>): Promise<Transcription | null>;
declare function manifestHasTranscriptions(vault: CompatVault, manifest: string | {
  id: string;
  type: string;
} | ManifestNormalized | Manifest, pagesToCheck?: number): Promise<boolean>;
//#endregion
export { annotationPageToTranscription, canvasHasTranscriptionSync, canvasLoadExternalAnnotationPages, getCanvasTranscription, manifestHasTranscriptions, timeStampToSeconds, vttToTranscription };
//# sourceMappingURL=transcriptions.d.ts.map