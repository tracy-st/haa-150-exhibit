{"version":3,"file":"ranges-BPdHnlV0.d.ts","names":["Canvas","InternationalString","Range","Reference","SpecificResource","CanvasNormalized","ManifestNormalized","RangeNormalized","CompatVault","createRangeHelper","RangeTableOfContentsNode","Partial","IsRangeContiguousDetail","findFirstCanvasFromRange","findFirstCanvasFromRangeWithSelector","findAllCanvasesInRange","Array","findManifestSelectedRange","findSelectedRange","rangesToTableOfContentsTree","rangeToTableOfContentsTree","isRangeContiguous"],"sources":["../src/ranges.d.ts"],"sourcesContent":["import type { Canvas, InternationalString, Range, Reference, SpecificResource } from '@iiif/presentation-3';\nimport type { CanvasNormalized, ManifestNormalized, RangeNormalized } from '@iiif/presentation-3-normalized';\nimport { type CompatVault } from './compat';\nexport declare function createRangeHelper(vault?: CompatVault): {\n    findFirstCanvasFromRange: (range: RangeNormalized) => {\n        type: \"Canvas\";\n        id: string;\n    } | null;\n    findAllCanvasesInRange: (range: RangeNormalized) => {\n        type: \"Canvas\";\n        id: string;\n    }[];\n    findManifestSelectedRange: (manifest: ManifestNormalized, canvasId: string) => RangeNormalized | null;\n    findSelectedRange: (range: RangeNormalized, canvasId: string) => RangeNormalized | null;\n    rangesToTableOfContentsTree: (rangeRefs: RangeNormalized[], label?: InternationalString | null, options?: {\n        showNoNav?: boolean;\n    }) => RangeTableOfContentsNode | null;\n    rangeToTableOfContentsTree: (rangeRef: RangeNormalized | Reference<'Range'>, options?: {\n        showNoNav?: boolean;\n    }) => RangeTableOfContentsNode | null;\n    isContiguous: (rangeRef: RangeNormalized | Reference<'Range'>, canvasesRef: Canvas[] | CanvasNormalized[] | Reference<'Canvas'>[], options?: Partial<{\n        allowGaps: boolean;\n        allowSubset: boolean;\n        detail?: boolean;\n    }>) => [boolean, IsRangeContiguousDetail | null];\n};\nexport declare function findFirstCanvasFromRange(vault: CompatVault, range: RangeNormalized): null | Reference<'Canvas'>;\nexport declare function findFirstCanvasFromRangeWithSelector(vault: CompatVault, range: RangeNormalized): null | SpecificResource<Reference<'Canvas'>>;\nexport declare function findAllCanvasesInRange(vault: CompatVault, range: RangeNormalized): Array<Reference<'Canvas'>>;\nexport declare function findManifestSelectedRange(vault: CompatVault, manifest: ManifestNormalized, canvasId: string): null | RangeNormalized;\nexport declare function findSelectedRange(vault: CompatVault, range: RangeNormalized, canvasId: string): null | RangeNormalized;\nexport interface RangeTableOfContentsNode {\n    id: string;\n    type: 'Canvas' | 'Range';\n    label: InternationalString | null;\n    resource?: SpecificResource;\n    untitled?: boolean;\n    isCanvasLeaf: boolean;\n    isRangeLeaf: boolean;\n    isVirtual?: boolean;\n    isNoNav?: boolean;\n    firstCanvas?: SpecificResource<Reference<'Canvas'>> | null;\n    items?: Array<RangeTableOfContentsNode>;\n}\nexport declare function rangesToTableOfContentsTree(vault: CompatVault, rangeRefs: RangeNormalized[] | Range[] | Reference<'Range'>[], label?: InternationalString | null, options?: {\n    showNoNav?: boolean;\n}): RangeTableOfContentsNode | null;\nexport declare function rangeToTableOfContentsTree(vault: CompatVault, rangeRef: undefined | null | Range | RangeNormalized | Reference<'Range'>, seenIds?: string[], options?: {\n    showNoNav?: boolean;\n}): RangeTableOfContentsNode | null;\ntype IsRangeContiguousDetail = {\n    isContiguous: boolean;\n    startIndex: number;\n    endIndex: number;\n    gaps: Array<{\n        startIndex: number;\n        endIndex: number;\n        canvasIds: string[];\n    }>;\n    invalidRanges: Array<{\n        id: string;\n        reasons: string[];\n    }>;\n    invalidCanvases: string[];\n    reason: string | null;\n};\nexport declare function isRangeContiguous(vault: CompatVault, rangeRef: Range | RangeNormalized | Reference<'Range'>, canvasesRef: Canvas[] | CanvasNormalized[] | Reference<'Canvas'>[], options?: Partial<{\n    allowGaps: boolean;\n    allowSubset: boolean;\n    detail?: boolean;\n}>): [boolean, IsRangeContiguousDetail | null];\nexport {};\n"],"mappings":"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"}