{"version":3,"file":"thumbnail-B4K88W9F.js","names":["helpers: Map<CompatVault, ReturnType<typeof createThumbnailHelper>>","fullInput:\n      | string\n      | ManifestNormalized\n      | CollectionNormalized\n      | CanvasNormalized\n      | AnnotationNormalized\n      | AnnotationPageNormalized\n      | ContentResource\n      | ChoiceBody\n      | undefined"],"sources":["../src/thumbnail.ts"],"sourcesContent":["import { ChoiceBody, CollectionItemSchemas, ContentResource, Reference } from '@iiif/presentation-3';\nimport {\n  AnnotationNormalized,\n  AnnotationPageNormalized,\n  CanvasNormalized,\n  CollectionNormalized,\n  DescriptiveNormalized,\n  ManifestNormalized,\n} from '@iiif/presentation-3-normalized';\nimport { compatVault, CompatVault } from './compat';\nimport {\n  FixedSizeImage,\n  FixedSizeImageService,\n  getFixedSizeFromImage,\n  ImageCandidate,\n  ImageCandidateRequest,\n  ImageServiceLoader,\n  UnknownSizeImage,\n  VariableSizeImage,\n} from './image-service';\n\nexport const imageServiceLoader = new ImageServiceLoader();\n\nexport type ThumbnailInput =\n  | string\n  | Reference<CollectionItemSchemas>\n  | Reference<'Collection'>\n  | Reference<'Manifest'>\n  | Reference<'Canvas'>\n  | Reference<'Annotation'>\n  | Reference<'AnnotationPage'>\n  | Reference<'ContentResource'>\n  | CollectionNormalized\n  | ManifestNormalized\n  | CanvasNormalized\n  | AnnotationNormalized\n  | AnnotationPageNormalized\n  | ContentResource\n  | undefined;\n\nexport type ThumbnailOutput = Promise<{\n  best: null | undefined | FixedSizeImage | FixedSizeImageService | VariableSizeImage | UnknownSizeImage;\n  fallback: Array<ImageCandidate>;\n  log: string[];\n}>;\n\nconst helpers: Map<CompatVault, ReturnType<typeof createThumbnailHelper>> = new Map();\nexport function getThumbnail(\n  input: ThumbnailInput,\n  {\n    vault = compatVault,\n    dereference = false,\n    ...options\n  }: ImageCandidateRequest & { vault?: CompatVault; dereference?: boolean } = {}\n) {\n  let helper = helpers.get(vault);\n  if (!helper) {\n    helper = createThumbnailHelper(vault);\n    helpers.set(vault, helper);\n  }\n  return helper.getBestThumbnailAtSize(input, options, dereference);\n}\n\nexport function createThumbnailHelper(\n  vault: CompatVault = compatVault,\n  dependencies: { imageServiceLoader?: ImageServiceLoader } = {}\n) {\n  const loader = dependencies.imageServiceLoader || imageServiceLoader;\n\n  async function getBestThumbnailAtSize(\n    input: ThumbnailInput,\n    request: ImageCandidateRequest,\n    dereference = false,\n    candidates: Array<ImageCandidate> = [],\n    dimensions?: { width: number; height: number }\n  ): ThumbnailOutput {\n    const thumbnailNotFound = () => loader.getThumbnailFromResource(undefined as any, request, dereference, candidates);\n\n    if (!input) {\n      // We might have candidates already to pick from.\n      return await loader.getThumbnailFromResource(undefined as any, request, dereference, candidates);\n    }\n\n    if (typeof input === 'string') {\n      const fixed = getFixedSizeFromImage(input as any);\n      if (fixed) {\n        candidates.push(fixed);\n      }\n\n      return await loader.getThumbnailFromResource(undefined as any, request, dereference, candidates);\n    }\n\n    // Run through from ref, just in case.\n    const fullInput:\n      | string\n      | ManifestNormalized\n      | CollectionNormalized\n      | CanvasNormalized\n      | AnnotationNormalized\n      | AnnotationPageNormalized\n      | ContentResource\n      | ChoiceBody\n      | undefined = vault.get(input as any, { skipSelfReturn: false }) as any;\n\n    if (typeof fullInput === 'string') {\n      return { best: getFixedSizeFromImage(fullInput as any), fallback: [], log: [] };\n    }\n\n    if (!fullInput) {\n      return await thumbnailNotFound();\n    }\n\n    const parseThumbnail = async (resource: DescriptiveNormalized) => {\n      if (resource && resource.thumbnail && resource.thumbnail.length) {\n        const thumbnail = vault.get(resource.thumbnail[0]);\n        const potentialThumbnails = await loader.getImageCandidates(thumbnail as any, dereference);\n        if (potentialThumbnails && potentialThumbnails.length) {\n          candidates.push(...potentialThumbnails);\n        }\n      }\n    };\n\n    await parseThumbnail(fullInput as any);\n\n    switch (fullInput.type) {\n      case 'Annotation': {\n        // Grab the body.\n        const contentResources = Array.isArray(fullInput.body) ? fullInput.body : [fullInput.body];\n        // @todo this could be configuration.\n        const firstContentResources = vault.get(contentResources[0]);\n        if (dimensions && !(firstContentResources as any).width) {\n          (firstContentResources as any).width = dimensions.width;\n          (firstContentResources as any).height = dimensions.height;\n        }\n\n        return await loader.getThumbnailFromResource(firstContentResources as any, request, dereference, candidates);\n      }\n\n      case 'Canvas': {\n        const canvas = fullInput as CanvasNormalized;\n\n        return getBestThumbnailAtSize(canvas.items[0], request, dereference, candidates, {\n          width: canvas.width,\n          height: canvas.height,\n        });\n      }\n\n      // Unsupported for now.\n      case 'AnnotationPage': {\n        const annotationPage = fullInput as AnnotationPageNormalized;\n        return getBestThumbnailAtSize(annotationPage.items[0], request, dereference, candidates, dimensions);\n      }\n\n      case 'Choice': {\n        const choice = fullInput;\n        if (!choice.items || choice.items[0]) {\n          return await thumbnailNotFound();\n        }\n        // @todo this could also be configuration, just choosing the first choice.\n        return getBestThumbnailAtSize(choice.items[0] as any, request, dereference, candidates, dimensions);\n      }\n      case 'Collection': {\n        // This one is tricky, as the manifests may not have been loaded. But we will give it a shot.\n        const collection = fullInput as CollectionNormalized;\n        const firstManifest = collection.items[0];\n        if (!firstManifest) {\n          return await thumbnailNotFound();\n        }\n        return getBestThumbnailAtSize(firstManifest, request, dereference, candidates, dimensions);\n      }\n\n      case 'Manifest': {\n        const manifest = fullInput as ManifestNormalized;\n        const firstCanvas = manifest.items[0];\n        if (!firstCanvas) {\n          return await thumbnailNotFound();\n        }\n        return getBestThumbnailAtSize(firstCanvas, request, dereference, candidates, dimensions);\n      }\n\n      case 'SpecificResource':\n      case 'Image':\n      case 'Dataset':\n      case 'Sound':\n      case 'Text':\n      case 'TextualBody':\n      case 'Video':\n        if (dimensions && !(fullInput as any).width) {\n          (fullInput as any).width = dimensions.width;\n          (fullInput as any).height = dimensions.height;\n        }\n\n        return loader.getThumbnailFromResource(fullInput as any, request, dereference, candidates);\n\n      // Seems unlikely these would appear, but it would be an error..\n      // case 'Service': // @todo could do something with vault.\n      // case 'Range':\n      // case 'AnnotationCollection':\n      // case 'CanvasReference':\n      // case 'ContentResource':\n      //   return await thumbnailNotFound();\n    }\n\n    return await thumbnailNotFound();\n  }\n\n  return {\n    getBestThumbnailAtSize,\n  };\n}\n"],"mappings":"+IAqBA,MAAa,EAAqB,IAAI,EAyBhCA,EAAsE,IAAI,IAChF,SAAgB,EACd,EACA,CACE,QAAQ,EACR,cAAc,GACd,GAAG,GACuE,GAC5E,CACA,IAAI,EAAS,EAAQ,IAAI,GAKzB,OAJK,IACH,EAAS,EAAsB,GAC/B,EAAQ,IAAI,EAAO,IAEd,EAAO,uBAAuB,EAAO,EAAS,GAGvD,SAAgB,EACd,EAAqB,EACrB,EAA4D,GAC5D,CACA,IAAM,EAAS,EAAa,oBAAsB,EAElD,eAAe,EACb,EACA,EACA,EAAc,GACd,EAAoC,GACpC,EACiB,CACjB,IAAM,MAA0B,EAAO,yBAAyB,IAAA,GAAkB,EAAS,EAAa,GAExG,GAAI,CAAC,EAEH,OAAO,MAAM,EAAO,yBAAyB,IAAA,GAAkB,EAAS,EAAa,GAGvF,GAAI,OAAO,GAAU,SAAU,CAC7B,IAAM,EAAQ,EAAsB,GAKpC,OAJI,GACF,EAAW,KAAK,GAGX,MAAM,EAAO,yBAAyB,IAAA,GAAkB,EAAS,EAAa,GAIvF,IAAMC,EASU,EAAM,IAAI,EAAc,CAAE,eAAgB,KAE1D,GAAI,OAAO,GAAc,SACvB,MAAO,CAAE,KAAM,EAAsB,GAAmB,SAAU,GAAI,IAAK,IAG7E,GAAI,CAAC,EACH,OAAO,MAAM,IAGf,IAAM,EAAiB,KAAO,IAAoC,CAChE,GAAI,GAAY,EAAS,WAAa,EAAS,UAAU,OAAQ,CAC/D,IAAM,EAAY,EAAM,IAAI,EAAS,UAAU,IACzC,EAAsB,MAAM,EAAO,mBAAmB,EAAkB,GAC1E,GAAuB,EAAoB,QAC7C,EAAW,KAAK,GAAG,KAOzB,OAFA,MAAM,EAAe,GAEb,EAAU,KAAlB,CACE,IAAK,aAAc,CAEjB,IAAM,EAAmB,MAAM,QAAQ,EAAU,MAAQ,EAAU,KAAO,CAAC,EAAU,MAE/E,EAAwB,EAAM,IAAI,EAAiB,IAMzD,OALI,GAAc,CAAE,EAA8B,QAC/C,EAA8B,MAAQ,EAAW,MACjD,EAA8B,OAAS,EAAW,QAG9C,MAAM,EAAO,yBAAyB,EAA8B,EAAS,EAAa,GAGnG,IAAK,SAAU,CACb,IAAM,EAAS,EAEf,OAAO,EAAuB,EAAO,MAAM,GAAI,EAAS,EAAa,EAAY,CAC/E,MAAO,EAAO,MACd,OAAQ,EAAO,SAKnB,IAAK,iBAAkB,CACrB,IAAM,EAAiB,EACvB,OAAO,EAAuB,EAAe,MAAM,GAAI,EAAS,EAAa,EAAY,GAG3F,IAAK,SAAU,CACb,IAAM,EAAS,EAKf,MAJI,CAAC,EAAO,OAAS,EAAO,MAAM,GACzB,MAAM,IAGR,EAAuB,EAAO,MAAM,GAAW,EAAS,EAAa,EAAY,GAE1F,IAAK,aAAc,CAEjB,IAAM,EAAa,EACb,EAAgB,EAAW,MAAM,GAIvC,OAHK,EAGE,EAAuB,EAAe,EAAS,EAAa,EAAY,GAFtE,MAAM,IAKjB,IAAK,WAAY,CACf,IAAM,EAAW,EACX,EAAc,EAAS,MAAM,GAInC,OAHK,EAGE,EAAuB,EAAa,EAAS,EAAa,EAAY,GAFpE,MAAM,IAKjB,IAAK,mBACL,IAAK,QACL,IAAK,UACL,IAAK,QACL,IAAK,OACL,IAAK,cACL,IAAK,QAMH,OALI,GAAc,CAAE,EAAkB,QACnC,EAAkB,MAAQ,EAAW,MACrC,EAAkB,OAAS,EAAW,QAGlC,EAAO,yBAAyB,EAAkB,EAAS,EAAa,GAWnF,OAAO,MAAM,IAGf,MAAO,CACL"}