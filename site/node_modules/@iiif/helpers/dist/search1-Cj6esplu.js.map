{"version":3,"file":"search1-Cj6esplu.js","names":["fetcher: Fetcher<SearchServiceAutocompleteResponse>","abort: AbortController | null","autocomplete","options","searchService: Search1Service | undefined"],"sources":["../src/search1.ts"],"sourcesContent":["import {\n  SearchService as _SearchService,\n  SearchServiceAutocomplete,\n  IdOrAtId,\n  SearchServiceAutocompleteQueryParams,\n  SearchServiceAutocompleteResponse,\n  SearchServiceSearchResponse,\n  SearchServiceQueryParams,\n  Manifest,\n  SearchServiceCommonHitSelectors,\n} from '@iiif/presentation-3';\nimport { ManifestNormalized } from '@iiif/presentation-3-normalized';\nimport { g } from 'vitest/dist/suite-a18diDsI.js';\nimport { createStore } from 'zustand/vanilla';\n\nexport type Search1Service = _SearchService & {\n  service?: SearchServiceAutocomplete | SearchServiceAutocomplete[] | undefined;\n};\n\nconst getId = (idOrAtId: IdOrAtId<any>): string => (idOrAtId as any).id || (idOrAtId as any)['@id'];\n\nexport interface Search1AutocompleteStore {\n  hasAutocomplete: boolean;\n  endpoint: string | undefined;\n  results: SearchServiceAutocompleteResponse['terms'];\n  lastQuery: SearchServiceAutocompleteQueryParams | null;\n  loading: boolean;\n  error: boolean;\n  errorMessage: string;\n  ignored: string[];\n  setSearchService: (service: Search1Service) => void;\n  clearSearch: () => void;\n  search: (\n    query: string,\n    options?: { motivation?: string; date?: string; user?: string; headers?: HeadersInit }\n  ) => void | Promise<void>;\n}\n\nexport function findSearch1Service(manifest: ManifestNormalized | Manifest): Search1Service | null {\n  if (!manifest || !manifest.service) {\n    return null;\n  }\n  return manifest\n    ? (manifest.service.find(\n        (service: any) =>\n          (service as any).profile === 'SearchService1' ||\n          (service as any).profile === 'http://iiif.io/api/search/1/search'\n      ) as any)\n    : null;\n}\n\nexport function findAutocompleteService(service: Search1Service): SearchServiceAutocomplete | undefined {\n  if (!service || !service.service) return;\n  const services = Array.isArray(service.service) ? service.service : [service.service];\n  return services.find(\n    (s: any) =>\n      s.profile === 'http://iiif.io/api/search/0/autocomplete' ||\n      s.profile === 'http://iiif.io/api/search/1/autocomplete' ||\n      s.profile === 'AutoCompleteService1'\n  );\n}\n\nexport const createSearch1AutocompleteStore = (\n  service?: Search1Service | undefined,\n  options?: { fetcher?: Fetcher<SearchServiceAutocompleteResponse> }\n) => {\n  const fetcher: Fetcher<SearchServiceAutocompleteResponse> = options?.fetcher || defaultFetcher;\n  const autocomplete = service ? findAutocompleteService(service) : undefined;\n  const autocompleteEndpoint = autocomplete ? getId(autocomplete) : undefined;\n\n  let abort: AbortController | null = null;\n\n  return createStore<Search1AutocompleteStore>((set, get) => ({\n    results: [],\n    lastQuery: {} as SearchServiceAutocompleteQueryParams,\n    hasAutocomplete: !!autocomplete,\n    endpoint: autocompleteEndpoint,\n    loading: false,\n    error: false,\n    errorMessage: '',\n    ignored: [],\n\n    setSearchService(newService: Search1Service) {\n      const autocomplete = findAutocompleteService(newService);\n      if (autocomplete) {\n        set({\n          endpoint: getId(autocomplete),\n          hasAutocomplete: true,\n          results: [],\n          loading: false,\n          lastQuery: null,\n          error: false,\n          errorMessage: '',\n        });\n      }\n    },\n\n    clearSearch() {\n      set({ results: [], loading: false, lastQuery: null });\n    },\n\n    async search(\n      query: string,\n      options: { motivation?: string; date?: string; user?: string; headers?: HeadersInit } = {}\n    ) {\n      const endpoint = get().endpoint;\n      if (get().hasAutocomplete === false) {\n        return;\n      }\n      if (abort && !abort.signal.aborted) {\n        abort.abort();\n      }\n\n      abort = new AbortController();\n\n      const params = new URLSearchParams();\n      params.set('q', query);\n      if (options.motivation) {\n        params.set('motivation', options.motivation);\n      }\n      if (options.date) {\n        params.set('date', options.date);\n      }\n      if (options.user) {\n        params.set('user', options.user);\n      }\n\n      let shouldLoad = true;\n\n      if ((!query || query.length < 3) && !options.motivation && !options.date && !options.user) {\n        shouldLoad = false;\n      }\n\n      set({\n        loading: shouldLoad,\n        lastQuery: {\n          q: query,\n          motivation: options.motivation,\n          date: options.date,\n          user: options.user,\n        },\n      });\n\n      if (!shouldLoad) {\n        return;\n      }\n\n      return fetcher(`${endpoint}?${params.toString()}`, {\n        signal: abort.signal,\n        headers: {\n          'Content-Type': 'application/json',\n          Accept: 'application/json',\n          ...(options.headers || {}),\n        },\n      }).then(async ([json, error]) => {\n        if (abort?.signal.aborted) {\n          return;\n        }\n        if (json) {\n          set({\n            loading: false,\n            ignored: json.ignored || [],\n            results: json.terms,\n            error: false,\n            errorMessage: '',\n          });\n        } else {\n          set({ results: [], error: true, errorMessage: error || undefined });\n        }\n      });\n    },\n  }));\n};\n\nexport type SingleSearchHit = {\n  '@type': 'search:Hit';\n  annotations: string[];\n  selectors: Array<SearchServiceCommonHitSelectors>;\n  match?: string;\n  before?: string;\n  after?: string;\n};\n\nexport interface Search1Store {\n  endpoint: string | undefined;\n  service: Search1Service | undefined;\n  lastQuery: SearchServiceQueryParams;\n  resources: SearchServiceSearchResponse['resources'];\n  hits: SingleSearchHit[];\n  loading: boolean;\n  error: boolean;\n  hasAutocomplete: boolean;\n  hasSearch: boolean;\n  errorMessage: string;\n  hitIndex: number;\n  highlight: {\n    results: SearchServiceSearchResponse['resources'] | null;\n    hit: SingleSearchHit | null;\n  };\n  search: (query: SearchServiceQueryParams, options?: { headers?: HeadersInit }) => void | Promise<void>;\n  setSearchService: (service: Search1Service) => void;\n  clearSearch: () => void;\n  highlightHit: (index: number) => void;\n  nextHit: () => void;\n  previousHit: () => void;\n}\n\ntype FetcherReturn<T> = Promise<[T | null, error: string | null]>;\ntype Fetcher<T> = (query: string, options: { signal: AbortSignal; headers?: HeadersInit }) => FetcherReturn<T>;\n\nfunction defaultFetcher(\n  query: string,\n  { signal, headers }: { signal: AbortSignal; headers?: HeadersInit }\n): FetcherReturn<any> {\n  return fetch(query, {\n    signal: signal,\n    headers: {\n      'Content-Type': 'application/json',\n      Accept: 'application/json',\n      ...(headers || {}),\n    },\n  }).then(async (response) => {\n    if (response.ok) {\n      return [await response.json(), null] as const;\n    }\n    return [null, response.statusText] as const;\n  });\n}\n\nexport const createSearch1Store = (\n  service?: Search1Service | string,\n  options?: {\n    fetcher?: Fetcher<SearchServiceSearchResponse>;\n  }\n) => {\n  const fetcher = options?.fetcher || defaultFetcher;\n\n  let searchService: Search1Service | undefined;\n  if (typeof service === 'string') {\n    searchService = {\n      '@context': 'http://iiif.io/api/search/1/context.json',\n      profile: 'http://iiif.io/api/search/1/search',\n      '@id': service,\n      id: service,\n      service: [],\n    };\n  } else {\n    searchService = service;\n  }\n\n  let abort: AbortController | null = null;\n\n  return createStore<Search1Store>((set, get) => ({\n    endpoint: searchService ? getId(searchService) : undefined,\n    service: searchService,\n    resources: [],\n    hits: [],\n    lastQuery: {} as SearchServiceQueryParams,\n    loading: false,\n    error: false,\n    highlight: {\n      results: null,\n      hit: null,\n    },\n    hitIndex: -1,\n    hasSearch: !!searchService,\n    hasAutocomplete: searchService ? !!findAutocompleteService(searchService) : false,\n    errorMessage: '',\n    async search(query: SearchServiceQueryParams, options: { headers?: HeadersInit } = {}) {\n      const endpoint = get().endpoint;\n      if (!endpoint) {\n        throw new Error('No search service found.');\n      }\n      if (abort && !abort.signal.aborted) {\n        abort.abort();\n      }\n\n      abort = new AbortController();\n\n      const params = new URLSearchParams();\n      if (query.q) {\n        params.set('q', query.q);\n      }\n      if (query.motivation) {\n        params.set('motivation', query.motivation);\n      }\n      if (query.date) {\n        params.set('date', query.date);\n      }\n      if (query.user) {\n        params.set('user', query.user);\n      }\n\n      set({\n        lastQuery: query,\n        loading: true,\n      });\n\n      const response = await fetcher(`${endpoint}?${params.toString()}`, {\n        signal: abort.signal,\n        headers: options.headers,\n      }).then(([json, errorMessage]) => {\n        if (abort?.signal.aborted) {\n          return;\n        }\n        if (json) {\n          set({\n            resources: (json.resources || []).map((result: any) => {\n              if (result.search && !result.url) {\n                result.url = result.search;\n              }\n              return result;\n            }),\n            hits:\n              json.hits ||\n              (json.resources || []).map((result: any) => {\n                return {\n                  '@type': 'search:Hit',\n                  after: '',\n                  annotations: [result['@id']],\n                  before: '',\n                  match: result.resource.chars,\n                };\n              }),\n            error: false,\n            errorMessage: '',\n            loading: false,\n          });\n        } else {\n          set({\n            loading: false,\n            resources: [],\n            error: true,\n            errorMessage: errorMessage || undefined,\n          });\n        }\n      });\n\n      return response;\n    },\n\n    setSearchService(newService: Search1Service) {\n      set({\n        service: newService,\n        endpoint: newService ? getId(newService) : undefined,\n        hasSearch: !!newService,\n        hasAutocomplete: newService ? !!findAutocompleteService(newService) : false,\n        loading: false,\n        resources: [],\n        error: false,\n        errorMessage: '',\n        highlight: { results: null, hit: null },\n      });\n    },\n\n    // Other actions?\n    clearSearch() {\n      set({ resources: [], error: false, errorMessage: '' });\n    },\n\n    highlightHit(index: number) {\n      const state = get();\n      const hit = state.hits[index];\n      if (!hit) {\n        return;\n      }\n      const results = state.resources.filter((r) => hit.annotations.includes(r['@id']));\n      set({ hitIndex: index, highlight: { results, hit } });\n    },\n    nextHit() {\n      const state = get();\n      const nextIndex = state.hitIndex + 1;\n      if (nextIndex >= state.hits.length) {\n        return;\n      }\n      state.highlightHit(nextIndex);\n    },\n    previousHit() {\n      const state = get();\n      const nextIndex = state.hitIndex - 1;\n      if (nextIndex < 0) {\n        return;\n      }\n      state.highlightHit(nextIndex);\n    },\n  }));\n};\n"],"mappings":"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"}