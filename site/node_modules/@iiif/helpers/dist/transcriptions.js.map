{"version":3,"file":"transcriptions.js","names":["annotationPages: any[]","segments: Transcription['segments']","selector: TemporalSelector","transcription: Transcription","segment: Transcription['segments'][number]","transcription","canvasHasTranscription"],"sources":["../src/transcriptions.ts"],"sourcesContent":["// Transcription helper.\n// Will find the following transcriptions:\n//\n// - VTT as rendering on canvas\n// - Embedded Annotation page\n// - External Annotation page\n// - ALTO annotations\n//\n// Helpers:\n// - canvasHasTranscription() -> boolean\n// - getCanvasTranscription() -> { TBC }\n//\n// Cookbook:\n// - https://iiif.io/api/cookbook/recipe/0017-transcription-av/\n// - https://iiif.io/api/cookbook/recipe/0219-using-caption-file/\n// - https://iiif.io/api/cookbook/recipe/0046-rendering/\n// - https://iiif.io/api/cookbook/recipe/0231-transcript-meta-recipe/\n// - https://iiif.io/api/cookbook/recipe/0068-newspaper/\n//\n// Plaintext rendering on canvas:\n//   \"rendering\": [\n//   {\n//     \"id\": \"https://fixtures.iiif.io/video/indiana/volleyball/volleyball.txt\",\n//     \"type\": \"Text\",\n//     \"label\": {\n//       \"en\": [\n//         \"Transcript\"\n//       ]\n//     },\n//     \"format\": \"text/plain\"\n//   }\n// ]\n//\n//\n// VTT annotation body on AV canvases:\n// \"annotations\": [\n//   {\n//     \"id\": \"https://iiif.io/api/cookbook/recipe/0219-using-caption-file/canvas/page2\",\n//     \"type\": \"AnnotationPage\",\n//     \"items\": [\n//       {\n//         \"id\": \"https://iiif.io/api/cookbook/recipe/0219-using-caption-file/canvas/page2/a1\",\n//         \"type\": \"Annotation\",\n//         \"motivation\": \"supplementing\",\n//         \"body\": {\n//           \"id\": \"https://fixtures.iiif.io/video/indiana/lunchroom_manners/lunchroom_manners.vtt\",\n//           \"type\": \"Text\",\n//           \"format\": \"text/vtt\",\n//           \"label\": {\n//             \"en\": [\n//               \"Captions in WebVTT format\"\n//             ]\n//           },\n//           \"language\": \"en\"\n//         },\n//         \"target\": \"https://iiif.io/api/cookbook/recipe/0219-using-caption-file/canvas\"\n//       }\n//     ]\n//   }\n// ]\n//\n//\n//\n// OCR annotations:\n// - a motivation of supplementing,\n// - the URI of the OCR file in the id property of the Annotation body, and\n// - the target set to the applicable Canvas.\n// {\n//   \"id\": \"https://iiif.io/api/cookbook/recipe/0068-newspaper/newspaper_issue_1-anno_p1.json-1\",\n//   \"type\": \"Annotation\",\n//   \"motivation\": \"supplementing\",\n//   \"body\": {\n//     \"type\": \"TextualBody\",\n//     \"format\": \"text/plain\",\n//     \"language\": \"de\",\n//     \"value\": \"I. 54. Jahrgang\"\n//   },\n//   \"target\": {\n//     \"type\": \"SpecificResource\",\n//     \"source\": {\n//       \"id\": \"https://iiif.io/api/cookbook/recipe/0068-newspaper/canvas/p1\",\n//       \"type\": \"Canvas\",\n//       \"partOf\": [\n//         {\n//           \"id\": \"https://iiif.io/api/cookbook/recipe/0068-newspaper/newspaper_issue_1-manifest.json\",\n//           \"type\": \"Manifest\"\n//         }\n//       ]\n//     },\n//     \"selector\": {\n//       \"type\": \"FragmentSelector\",\n//       \"conformsTo\": \"http://www.w3.org/TR/media-frags/\",\n//       \"value\": \"xywh=0,376,399,53\"\n//     }\n//   }\n// }\n// OR\n// Linking Directly to an ALTO File.\n//  \"rendering\": [\n//   {\n//     \"id\": \"https://iiif.io/api/cookbook/recipe/0068-newspaper/newspaper_issue_1-alto_p2.xml\",\n//     \"type\": \"Text\",\n//     \"format\": \"application/xml\",\n//     \"profile\": \"http://www.loc.gov/standards/alto/\",\n//     \"label\": {\n//       \"en\": [\n//         \"ALTO XML\"\n//       ]\n//     }\n//   }\n// ],\nimport {\n  AnnotationNormalized,\n  AnnotationPageNormalized,\n  CanvasNormalized,\n  ManifestNormalized,\n} from '@iiif/presentation-3-normalized';\nimport { CompatVault } from './compat';\nimport {\n  Annotation,\n  AnnotationPage,\n  Canvas,\n  ContentResource,\n  Manifest,\n  ManifestDescriptive,\n} from '@iiif/presentation-3';\nimport { ParsedSelector, TemporalSelector, expandTarget, parseSelector } from './annotation-targets';\n\ninterface Transcription {\n  id: string;\n  source: any;\n  plaintext: string;\n  segments: Array<{\n    text: string;\n    textRaw: string;\n    granularity?: 'word' | 'line' | 'paragraph' | 'block' | 'page';\n    language?: string;\n    selector?: ParsedSelector;\n    startRaw?: string;\n    endRaw?: string;\n  }>;\n}\n\nexport function canvasHasTranscriptionSync(\n  vault: CompatVault,\n  canvasRef: Canvas | CanvasNormalized | string,\n  annotationPages?: AnnotationPage[] | AnnotationPageNormalized[]\n): boolean {\n  if (typeof canvasRef === 'string') canvasRef = { id: canvasRef, type: 'Canvas' };\n  const canvas = vault.get<CanvasNormalized | Canvas>(canvasRef);\n\n  // Check for rendering\n  if (canvas.rendering) {\n    for (const renderingRef of canvas.rendering) {\n      const rendering = vault.get<ContentResource>(renderingRef as any);\n      if ('format' in rendering) {\n        if (rendering.format === 'text/plain') return true;\n        if (rendering.format === 'application/xml' && rendering?.profile === 'http://www.loc.gov/standards/alto/')\n          return true;\n      }\n    }\n  }\n\n  // Check for annotations\n  if (canvas.annotations) {\n    for (const annotationPageRef of canvas.annotations) {\n      const annotationPage = vault.get<AnnotationPageNormalized>(annotationPageRef);\n      for (const annotationRef of annotationPage.items || []) {\n        const annotation = vault.get<AnnotationNormalized | Annotation>(annotationRef as any);\n        if (annotation.motivation?.includes('supplementing')) {\n          if (annotation.body) {\n            const bodies = vault.get<ContentResource>(annotation.body as any);\n            const allBodies = Array.isArray(bodies) ? bodies : [bodies];\n            for (const body of allBodies) {\n              if (body.format === 'text/vtt') return true;\n              if (body.format === 'text/plain') return true;\n              if (body.type === 'TextualBody') return true;\n            }\n          }\n        }\n      }\n    }\n  }\n\n  // Check for external annotations passed in.\n  if (annotationPages) {\n    for (const annotationPage of annotationPages) {\n      for (const annotationRef of annotationPage.items || []) {\n        const annotation = vault.get<AnnotationNormalized | Annotation>(annotationRef as any);\n        if (annotation.motivation?.includes('supplementing')) {\n          if (annotation.body) {\n            const bodies = vault.get<ContentResource>(annotation.body as any);\n            const allBodies = Array.isArray(bodies) ? bodies : [bodies];\n            for (const body of allBodies) {\n              if (body.format === 'text/vtt') return true;\n              if (body.format === 'text/plain') return true;\n              if (body.type === 'TextualBody') return true;\n            }\n          }\n        }\n      }\n    }\n  }\n\n  return false;\n}\n\nexport async function canvasLoadExternalAnnotationPages(\n  vault: CompatVault,\n  canvasRef: Canvas\n): Promise<AnnotationPage[]>;\nexport async function canvasLoadExternalAnnotationPages(\n  vault: CompatVault,\n  canvasRef: CanvasNormalized\n): Promise<AnnotationPageNormalized[]>;\nexport async function canvasLoadExternalAnnotationPages(\n  vault: CompatVault,\n  canvasRef: Canvas | CanvasNormalized | string\n): Promise<AnnotationPageNormalized[] | AnnotationPage[]> {\n  if (typeof canvasRef === 'string') canvasRef = { id: canvasRef, type: 'Canvas' };\n  const canvas = vault.get<CanvasNormalized | Canvas>(canvasRef);\n  const annotationPages: any[] = [];\n  if (canvas.annotations) {\n    for (const annotationPageRef of canvas.annotations) {\n      const annotationPage = vault.get<AnnotationPageNormalized>(annotationPageRef);\n      const requestStatus = vault.requestStatus(annotationPage.id);\n      if (!requestStatus && (!annotationPage.items || (annotationPage as any)['iiif-parser:isExternal'])) {\n        try {\n          annotationPages.push(await vault.load(annotationPage.id));\n        } catch (e) {\n          // ignore.\n        }\n      } else {\n        annotationPages.push(annotationPage);\n      }\n    }\n  }\n\n  return annotationPages;\n}\n\n// Credit: https://gist.github.com/brospars/0bd13de8a22530c87d0945cf8e611225\nconst vttRegex = /^(\\d{2}:\\d{2}:\\d{2}[.,]\\d{3})\\s-->\\s(\\d{2}:\\d{2}:\\d{2}[.,]\\d{3})(.*)\\r?\\n(.*(?:\\r?\\n(?!\\r?\\n).*)*)/gm;\n\nexport function timeStampToSeconds(time: string) {\n  const [hours, minutes, seconds] = time.split(':').map((t) => parseFloat(t || '0'));\n  return hours * 3600 + minutes * 60 + seconds;\n}\n\nexport async function vttToTranscription(vtt: string, id: string): Promise<Transcription | null> {\n  const segments: Transcription['segments'] = [];\n\n  let match;\n  while ((match = vttRegex.exec(vtt))) {\n    const start = match[1];\n    const end = match[2];\n    const text = match[4].trim();\n\n    // @todo support more VTT including styles and positioning.\n    const selector: TemporalSelector = {\n      type: 'TemporalSelector',\n      temporal: {\n        startTime: timeStampToSeconds(start),\n        endTime: timeStampToSeconds(end),\n      },\n    };\n\n    segments.push({\n      startRaw: start,\n      endRaw: end,\n      text: text.replace(/(<([^>]+)>)/gi, ''),\n      textRaw: text,\n      selector: {\n        selector,\n        selectors: [selector],\n      },\n    });\n  }\n\n  if (!segments.length) return null;\n\n  return {\n    id,\n    source: { id, type: 'Text', format: 'text/vtt' },\n    plaintext: segments.map((s) => s.text).join('\\n'),\n    segments,\n  };\n}\n\nasync function altoToTranscription(alto: string) {\n  // @todo.\n  return null;\n}\n\nexport async function annotationPageToTranscription(\n  vault: CompatVault,\n  annotationPage: AnnotationPageNormalized | AnnotationPage\n) {\n  const transcription: Transcription = {\n    id: annotationPage.id,\n    source: { id: annotationPage.id, type: 'AnnotationPage' },\n    plaintext: '',\n    segments: [],\n  };\n\n  if (!annotationPage.items) return null;\n\n  for (const annotationRef of annotationPage.items) {\n    const annotation = vault.get<AnnotationNormalized | Annotation>(annotationRef as any);\n\n    if (annotation.motivation?.includes('supplementing')) {\n      if (annotation.body) {\n        // @todo smarter ordering based on position?\n        const bodies = vault.get<ContentResource>(annotation.body as any);\n        const body = Array.isArray(bodies) ? bodies[0] : bodies;\n        if (body.format === 'text/plain' || body.type === 'TextualBody') {\n          if (body.value && typeof body.value === 'string') {\n            let segmentText = body.value;\n            let granularity = (annotation as any).textGranularity;\n            if (!granularity) {\n              granularity = segmentText.includes(' ') ? 'line' : 'word';\n            }\n            if (\n              granularity === 'line' ||\n              granularity === 'paragraph' ||\n              granularity === 'block' ||\n              granularity === 'page'\n            ) {\n              segmentText += '\\n';\n            } else {\n              segmentText += ' ';\n            }\n\n            const segment: Transcription['segments'][number] = {\n              text: segmentText,\n              textRaw: body.value,\n              granularity,\n            };\n\n            transcription.plaintext += segmentText;\n            if (annotation.target) {\n              try {\n                segment.selector = expandTarget(annotation.target as any);\n              } catch (e) {\n                // Ignore?\n              }\n            } else {\n              // Not a segment?\n            }\n\n            transcription.segments.push(segment);\n          }\n        }\n      }\n    }\n  }\n\n  transcription.plaintext = transcription.plaintext.trim();\n\n  if (transcription.plaintext === '' && transcription.segments.length === 0) return null;\n\n  return transcription;\n}\n\nexport async function getCanvasTranscription(\n  vault: CompatVault,\n  canvasRef: Canvas,\n  networkCache: Record<string, any> = {}\n): Promise<Transcription | null> {\n  // @todo how to avoid loading all external annotation pages? Chicken and egg.\n  const canvas = vault.get<CanvasNormalized | Canvas>(canvasRef);\n  const annotationPages = await canvasLoadExternalAnnotationPages(vault, canvas);\n\n  // At this point, we've loaded everything, and we will know if it's null.\n  if (!canvasHasTranscriptionSync(vault, canvasRef, annotationPages)) return null;\n\n  const transcription: Transcription = {\n    id: canvas.id,\n    source: canvas,\n    plaintext: '',\n    segments: [],\n  };\n\n  if (canvas.duration) {\n    // Look for VTT annotations\n    for (const annotationPage of annotationPages) {\n      for (const annotationRef of annotationPage.items || []) {\n        const annotation = vault.get<AnnotationNormalized | Annotation>(annotationRef as any);\n        if (annotation.motivation?.includes('supplementing')) {\n          if (annotation.body) {\n            const bodyRaw = vault.get<ContentResource>(annotation.body as any);\n            const bodies = Array.isArray(bodyRaw) ? bodyRaw : [bodyRaw];\n            for (const body of bodies) {\n              if (body.format === 'text/vtt') {\n                if (body.id) {\n                  const vtt = networkCache[body.id] || (await fetch(body.id, { method: 'GET' }).then((r) => r.text()));\n                  const transcription = await vttToTranscription(vtt, body.id);\n                  if (transcription) {\n                    return transcription;\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n\n  // Look for embedded annotations\n  pageLabel: for (const annotationPage of annotationPages) {\n    for (const annotationRef of annotationPage.items || []) {\n      const annotation = vault.get<AnnotationNormalized | Annotation>(annotationRef as any);\n      if (annotation.motivation?.includes('supplementing')) {\n        if (annotation.body) {\n          const bodyRaw = vault.get<ContentResource>(annotation.body as any);\n          const bodies = Array.isArray(bodyRaw) ? bodyRaw : [bodyRaw];\n          for (const body of bodies) {\n            if (body.format === 'text/plain' || body.type === 'TextualBody') {\n              // WE found a page.\n              const plaintext = await annotationPageToTranscription(vault, annotationPage);\n              if (plaintext) {\n                return plaintext;\n              }\n              // Otherwise skip the rest of the page.\n              continue pageLabel;\n            }\n          }\n        }\n      }\n    }\n  }\n\n  // Look for rendering\n  if (canvas.rendering) {\n    for (const renderingRef of canvas.rendering) {\n      const rendering = vault.get<ContentResource>(renderingRef as any);\n      if (rendering.format === 'text/plain') {\n        const plaintext =\n          networkCache[rendering.id] || (await fetch(rendering.id, { method: 'GET' }).then((r) => r.text()));\n        return { ...transcription, plaintext };\n      }\n    }\n  }\n\n  // Look for ALTO annotations\n  if (canvas.rendering) {\n    for (const renderingRef of canvas.rendering) {\n      const rendering = vault.get<ContentResource>(renderingRef as any);\n      if (rendering.format === 'application/xml' && rendering.profile === 'http://www.loc.gov/standards/alto/') {\n        // @todo parse ALTO\n        const transcription = await altoToTranscription(rendering.id);\n        if (transcription) {\n          return transcription;\n        }\n\n        return null;\n      }\n    }\n  }\n\n  return null;\n}\n\nexport async function manifestHasTranscriptions(\n  vault: CompatVault,\n  manifest: string | { id: string; type: string } | ManifestNormalized | Manifest,\n  pagesToCheck: number = 5\n): Promise<boolean> {\n  const canvases = vault.get(manifest)?.items || [];\n  let hasTranscription = false;\n  for (const canvas of canvases) {\n    const fullCanvas = vault.get(canvas);\n    const canvasHasTranscription = canvasHasTranscriptionSync(vault, fullCanvas);\n    if (canvasHasTranscription) {\n      hasTranscription = true;\n      break;\n    }\n\n    // Load external annotations\n    if (pagesToCheck > 0) {\n      pagesToCheck--;\n      const annotationPages = await canvasLoadExternalAnnotationPages(vault, fullCanvas);\n      const canvasHasTranscription = canvasHasTranscriptionSync(vault, fullCanvas, annotationPages);\n      if (canvasHasTranscription) {\n        hasTranscription = true;\n        break;\n      }\n    }\n  }\n  return hasTranscription;\n}\n"],"mappings":"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"}