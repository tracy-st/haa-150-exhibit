{"version":3,"file":"vault-BnIdusnp.d.ts","names":["Vault","REFS","REACTIVE","DEFINED","PARENT","WrappedObject","OG","ReactiveWrapped","Full","Omit","isWrapped","unwrapObject","wrapObject","Type","NormalizedType","ActionFromType","AllActions","Entities","IIIFStore","NormalizedEntity","PaginationState","RefToNormalized","RequestState","Collection","Manifest","Reference","SpecificResource","SerializeConfig","BatchAction","VaultZustandStore","CollectionNormalized","ManifestNormalized","ReactiveWrapped","VaultOptions","Record","T","Promise","GetOptions","GetObjectOptions","EntityRef","Ref","Vault","Partial","Type","Return","R","Key","NormalizedType","Value"],"sources":["../src/vault/utility/objects.d.ts","../src/vault/vault.d.ts"],"sourcesContent":["import { Vault } from '../vault';\nexport declare const REFS: unique symbol;\nexport declare const REACTIVE: unique symbol;\nexport declare const DEFINED: unique symbol;\nexport declare const PARENT: unique symbol;\nexport type WrappedObject<OG = any> = {\n    subscribe(subscription: (object: any, vault: Vault) => void, skipInitial?: boolean): () => void;\n    reactive(): void;\n    unreactive(): void;\n    refresh(): void;\n    unwrap(): OG;\n    valueOf(): OG;\n    toPresentation3(): any;\n    toPresentation2(): any;\n    is(refOrObject: any): boolean;\n    toJSON(): any;\n};\nexport type ReactiveWrapped<Full = any, T = any> = {} & WrappedObject<Full> & Omit<Full, 'items' | 'annotations' | 'structures' | 'seeAlso' | 'rendering' | 'partOf' | 'start' | 'supplementary' | 'homepage' | 'thumbnail' | 'placeholderCanvas' | 'accompanyingCanvas' | 'provider' | 'body' | 'logo'> & {\n    items: Full extends {\n        items: (infer A)[];\n    } ? (Full['items'][number] & ReactiveWrapped<any, Full['items'][number]>)[] : never;\n    annotations: Full extends {\n        annotations: (infer A)[];\n    } ? ReactiveWrapped<any, Full['annotations'][number]>[] : never;\n    structures: Full extends {\n        structures: (infer A)[];\n    } ? ReactiveWrapped<any, Full['structures'][number]>[] : never;\n    seeAlso: Full extends {\n        seeAlso: (infer A)[];\n    } ? ReactiveWrapped<any, Full['seeAlso'][number]>[] : never;\n    rendering: Full extends {\n        rendering: (infer A)[];\n    } ? ReactiveWrapped<any, Full['rendering'][number]>[] : never;\n    partOf: Full extends {\n        partOf: (infer A)[];\n    } ? ReactiveWrapped<any, Full['partOf'][number]>[] : never;\n    start: Full extends {\n        start: (infer A)[];\n    } ? ReactiveWrapped<any, Full['start'][number]>[] : never;\n    supplementary: Full extends {\n        supplementary: (infer A)[];\n    } ? ReactiveWrapped<any, Full['supplementary'][number]>[] : never;\n    homepage: Full extends {\n        homepage: (infer A)[];\n    } ? ReactiveWrapped<any, Full['homepage'][number]>[] : never;\n    thumbnail: Full extends {\n        thumbnail: (infer A)[];\n    } ? ReactiveWrapped<any, Full['thumbnail'][number]>[] : never;\n    placeholderCanvas: Full extends {\n        placeholderCanvas: (infer A)[];\n    } ? ReactiveWrapped<any, Full['placeholderCanvas'][number]>[] : never;\n    accompanyingCanvas: Full extends {\n        accompanyingCanvas: (infer A)[];\n    } ? ReactiveWrapped<any, Full['accompanyingCanvas'][number]>[] : never;\n    provider: Full extends {\n        provider: (infer A)[];\n    } ? ReactiveWrapped<any, Full['provider'][number]>[] : never;\n    body: Full extends {\n        body: (infer A)[];\n    } ? ReactiveWrapped<any, Full['body'][number]>[] : never;\n    logo: Full extends {\n        logo: (infer A)[];\n    } ? ReactiveWrapped<any, Full['logo'][number]>[] : never;\n};\nexport declare function isWrapped(object: any): object is WrappedObject;\nexport declare function unwrapObject(object: any): any;\nexport declare function wrapObject<Type, NormalizedType = any>(object: any, vault: Vault, reactive?: boolean, parent?: string): ReactiveWrapped<Type, NormalizedType>;\n","import { ActionFromType, AllActions, Entities, IIIFStore, NormalizedEntity, PaginationState, RefToNormalized, RequestState } from './types';\nimport { Collection, Manifest, Reference, SpecificResource } from '@iiif/presentation-3';\nimport { SerializeConfig } from '@iiif/parser';\nimport { BatchAction } from './actions';\nimport { VaultZustandStore } from './store';\nimport { CollectionNormalized, ManifestNormalized } from '@iiif/presentation-3-normalized';\nimport { ReactiveWrapped } from './utility/objects';\nexport type VaultOptions = {\n    reducers: Record<string, any>;\n    defaultState?: IIIFStore;\n    customFetcher: <T>(url: string, options: T) => unknown | Promise<unknown>;\n    enableDevtools: boolean;\n};\nexport type GetOptions = {\n    skipSelfReturn?: boolean;\n    parent?: Reference<any> | string;\n    preserveSpecificResources?: boolean;\n    skipPartOfCheck?: boolean;\n};\nexport type GetObjectOptions = GetOptions & {\n    reactive?: boolean;\n};\nexport type EntityRef<Ref extends keyof Entities> = IIIFStore['iiif']['entities'][Ref][string];\nexport declare class Vault {\n    private readonly options;\n    private readonly store;\n    private readonly emitter;\n    private isBatching;\n    private batchQueue;\n    remoteFetcher: (str: string, options?: any, mapper?: (resource: any) => any) => Promise<NormalizedEntity | undefined>;\n    staticFetcher: (str: string, json: any, mapper?: (resource: any) => any) => Promise<NormalizedEntity | undefined> | NormalizedEntity | undefined;\n    constructor(options?: Partial<VaultOptions>, store?: VaultZustandStore);\n    defaultFetcher: (url: string) => Promise<any>;\n    batch(cb: (vault: this) => void): void;\n    asyncBatch(cb: (vault: this) => Promise<void> | void): Promise<void>;\n    modifyEntityField(entity: Reference<keyof Entities>, key: string, value: any): void;\n    dispatch(action: AllActions | BatchAction): void;\n    on<Type extends AllActions['type']>(event: Type | `after:${Type}`, handler: (ctx: {\n        action: ActionFromType<Type>;\n        state: IIIFStore;\n    }) => void): () => void;\n    serialize<Return>(entity: Reference<keyof Entities>, config: SerializeConfig): Return;\n    toPresentation2<Return>(entity: Reference<keyof Entities>): Return;\n    toPresentation3<Return>(entity: Reference<keyof Entities>): Return;\n    hydrate<R extends {\n        type?: string;\n    }>(reference: string | Partial<R>, type?: string | GetOptions, options?: GetOptions): RefToNormalized<R>;\n    hydrate<R extends {\n        type?: string;\n    }>(reference: string[] | Partial<R>[], type?: string | GetOptions, options?: GetOptions): RefToNormalized<R>[];\n    get<R extends {\n        type?: string;\n    }>(reference: string | Partial<R> | Reference<R['type']> | SpecificResource<R>, type?: string | GetOptions, options?: GetOptions): RefToNormalized<R>;\n    get<R extends {\n        type?: string;\n    }>(reference: string[] | Partial<R>[] | Reference<R['type']>[] | SpecificResource<R>[], type?: string | GetOptions, options?: GetOptions): RefToNormalized<R>[];\n    select<R>(selector: (state: IIIFStore) => R): R;\n    getStore(): VaultZustandStore;\n    getState(): IIIFStore;\n    deep(input?: any, prev?: any): any;\n    loadManifest(id: string | Reference<any>, json?: unknown, mapper?: (resource: any) => any): Promise<ManifestNormalized | undefined>;\n    loadCollection(id: string | Reference<any>, json?: unknown, mapper?: (resource: any) => any): Promise<CollectionNormalized | undefined>;\n    load<T>(id: string | Reference<any>, json?: unknown, mapper?: (resource: any) => any): Promise<T | undefined>;\n    loadSync<T>(id: string | Reference<any>, json: unknown, mapper?: (resource: any) => any): T | undefined;\n    loadManifestSync(id: string | Reference<any>, json: unknown, mapper?: (resource: any) => any): ManifestNormalized | undefined;\n    loadCollectionSync(id: string | Reference<any>, json: unknown, mapper?: (resource: any) => any): CollectionNormalized | undefined;\n    areInputsEqual(newInputs: readonly unknown[] | unknown, lastInputs: readonly unknown[] | unknown): boolean;\n    subscribe<T>(selector: (state: IIIFStore) => T, subscription: (state: T, vault: Vault) => void, skipInitial: boolean): () => void;\n    subscribe<T>(subscription: (state: T, vault: Vault) => void, skipInitial?: boolean): () => void;\n    ensureLoaded(_id: string | Reference<any>): Promise<void>;\n    requestStatus(id: string): RequestState[any] | undefined;\n    getPaginationState<T = any>(resource: string | Reference): PaginationState | null;\n    loadNextPage(resource: string | Reference, json?: any): Promise<[PaginationState | null, CollectionNormalized | null]>;\n    getResourceMeta<T = any>(resource: string): Partial<T> | undefined;\n    getResourceMeta<T = any, Key extends keyof T = keyof T>(resource: string, metaKey: Key): T[Key] | undefined;\n    getObject<R extends {\n        type?: string;\n    }>(reference: string | Partial<R>, type?: string | GetObjectOptions, options?: GetObjectOptions): RefToNormalized<R>;\n    loadObject<Type, NormalizedType = any>(id: string | Reference<any>, json?: any): Promise<ReactiveWrapped<Type, NormalizedType>>;\n    loadManifestObject(id: string | Reference<any>, json?: any): Promise<ReactiveWrapped<Manifest, ManifestNormalized>>;\n    loadCollectionObject(id: string | Reference<any>, json?: any): Promise<ReactiveWrapped<Collection, CollectionNormalized>>;\n    wrapObject<T extends string>(objectType: Reference<T>): ReactiveWrapped<unknown, any>;\n    isWrapped(object: any): boolean;\n    setMetaValue<Value = any>([id, meta, key]: [string, string, string], newValueOrUpdate: Value | ((oldValue: Value | undefined) => Value)): void;\n}\n"],"mappings":"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"}