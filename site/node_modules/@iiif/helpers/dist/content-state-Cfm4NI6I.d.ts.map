{"version":3,"file":"content-state-Cfm4NI6I.d.ts","names":["Annotation","SupportedTarget","ContentState","StateSource","Array","NormalisedContentState","Record","ValidationResponse","validateContentState","serialiseContentState","parseContentState","Promise","encodeContentState","decodeContentState","normaliseContentState"],"sources":["../src/content-state.d.ts"],"sourcesContent":["import { Annotation } from '@iiif/presentation-3';\nimport { SupportedTarget } from './annotation-targets/target-types';\nexport type ContentState = string | (Annotation & {\n    '@context'?: string;\n}) | (StateSource & {\n    '@context'?: string;\n}) | Array<string | (Annotation & {\n    '@context'?: string;\n}) | (StateSource & {\n    '@context'?: string;\n})>;\nexport type StateSource = {\n    id: string;\n    type: 'Manifest' | 'Canvas' | 'Range';\n    partOf?: string | {\n        id: string;\n        type: string;\n    } | Array<{\n        id: string;\n        type: string;\n    }>;\n};\nexport type NormalisedContentState = {\n    id: string;\n    type: 'Annotation';\n    motivation: ['contentState', ...string[]];\n    target: Array<SupportedTarget>;\n    extensions: Record<string, any>;\n};\ntype ValidationResponse = readonly [false, {\n    reason?: string;\n}] | readonly [true];\nexport declare function validateContentState(annotation: ContentState, strict?: boolean): ValidationResponse;\nexport declare function serialiseContentState(annotation: ContentState): string;\nexport declare function parseContentState(state: string): ContentState;\nexport declare function parseContentState(state: string, async: false): ContentState;\nexport declare function parseContentState(state: string, async: true): Promise<ContentState>;\nexport declare function encodeContentState(state: string): string;\nexport declare function decodeContentState(encodedContentState: string): string;\nexport declare function normaliseContentState(state: ContentState): NormalisedContentState;\nexport {};\n"],"mappings":";;;;KAEYE,YAAAA,aAAyBF;;AAArC,CAAA,CAAA,GAAYE,CAENC,WAFMD,GAAY;EAAA,UAAA,CAAA,EAAA,MAAA;KAInBE,KAJgCJ,CAAAA,MAAAA,GAAAA,CAIhBA,UAJgBA,GAAAA;YAE/BG,CAAAA,EAAAA,MAAAA;MAIAA,WAFeH,GAAAA;YAEfG,CAAAA,EAAAA,MAAAA;;KAGMA,WAAAA;EAAAA,EAAAA,EAAAA,MAAAA;EAWAE,IAAAA,EAAAA,UAAAA,GAAAA,QAAsB,GAAA,OAAA;EAAA,MAAA,CAAA,EAAA,MAAA,GAAA;IAIhBJ,EAAAA,EAAAA,MAAAA;IAANG,IAAAA,EAAAA,MAAAA;MATJA,KAUQE,CAAAA;;IAEXC,IAAAA,EAAAA,MAAAA;EAGmBC,CAAAA,CAAAA;CAAoB;AAAaN,KAV7CG,sBAAAA,GAU6CH;MAAiCK,MAAAA;;EAClEE,UAAAA,EAAAA,CAAAA,cAAqB,EAAA,GAAA,MAAaP,EAAAA,CAAAA;EAClCQ,MAAAA,EARZN,KAQYM,CARNT,eAQuB,CAAA;EACjBS,UAAAA,EARRJ,MAQQI,CAAAA,MAAiB,EAAA,GAAA,CAA+BR;AACxE,CAAA;KAPKK,kBAAAA,GAOoC,SAAA,CAAA,KAAA,EAAA;QAAsCL,CAAAA,EAAAA,MAAAA;cAARS,CAAAA,IAAAA,CAAAA;iBAJ/CH,oBAAAA,aAAiCN,iCAAiCK;AAKlEK,iBAJAH,qBAAAA,CAIkB,UAAA,EAJgBP,YAIhB,CAAA,EAAA,MAAA;AAClBW,iBAJAH,iBAAAA,CAIkB,KAAA,EAAA,MAAA,CAAA,EAJgBR,YAIhB;AAClBY,iBAJAJ,iBAAAA,CAIqB,KAAA,EAAA,MAAA,EAAA,KAAA,EAAA,KAAA,CAAA,EAJ2BR,YAI3B;AAAA,iBAHrBQ,iBAAAA,CAGqB,KAAA,EAAA,MAAA,EAAA,KAAA,EAAA,IAAA,CAAA,EAH0BC,OAG1B,CAHkCT,YAGlC,CAAA;AAAQA,iBAF7BU,kBAAAA,CAE6BV,KAAAA,EAAAA,MAAAA,CAAAA,EAAAA,MAAAA;AAAeG,iBAD5CQ,kBAAAA,CAC4CR,mBAAAA,EAAAA,MAAAA,CAAAA,EAAAA,MAAAA;iBAA5CS,qBAAAA,QAA6BZ,eAAeG"}