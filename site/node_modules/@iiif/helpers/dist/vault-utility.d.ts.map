{"version":3,"file":"vault-utility.d.ts","names":["AllActions","actionListFromResource","areInputsEqual","NormalizedEntity","Vault","createFetchHelper","T","Promise","waitTimeout","Entities","getDefaultEntities","IIIFStore","NormalizedEntity","resolveIfExists","T","Reference","IIIFStore","NormalizedEntity","resolveList","T","Array"],"sources":["../src/vault/utility/action-list-from-resource.d.ts","../src/vault/utility/are-inputs-equal.d.ts","../src/vault/utility/create-fetch-helper.d.ts","../src/vault/utility/get-default-entities.d.ts","../src/vault/utility/resolve-if-exists.d.ts","../src/vault/utility/resolve-list.d.ts"],"sourcesContent":["import { AllActions } from '../types';\nexport declare const actionListFromResource: (id: string, response: unknown) => AllActions[];\n","export declare function areInputsEqual(newInputs: readonly unknown[] | unknown, lastInputs: readonly unknown[] | unknown): boolean;\n","import { NormalizedEntity } from '../types';\nimport type { Vault } from '../vault';\nexport declare function createFetchHelper<T>(vault: Vault, fetcher: (url: string, options?: T) => any | Promise<any>, { waitTimeout }?: {\n    waitTimeout?: number;\n}): (url: string, options?: T, mapper?: (r: any) => any) => NormalizedEntity | undefined | Promise<NormalizedEntity | undefined>;\n","import { Entities } from '../types';\nexport declare function getDefaultEntities(): Entities;\n","import { IIIFStore, NormalizedEntity } from '../types';\nexport declare function resolveIfExists<T extends NormalizedEntity>(state: IIIFStore, url: string, parent?: any): T | undefined;\n","import { Reference } from '@iiif/presentation-3';\nimport { IIIFStore, NormalizedEntity } from '../types';\nexport declare function resolveList<T extends NormalizedEntity>(state: IIIFStore, items: Reference<T>[]): Array<NormalizedEntity>;\n"],"mappings":";;;;;;cACqBC,2DAA2DD;;;iBCDxDE,cAAAA;;;iBCEAG,4BAA4BD,wCAAwCe,YAAYZ;;;;4BAE5EY,gCAAgCF,+BAA+BV,QAAQU;;;iBCH3EP,kBAAAA,CAAAA,GAAsBD;;;iBCAtBI,0BAA0BI,yBAAyBD,uCAAuCG;;;iBCC1FD,sBAAsBD,yBAAyBD,kBAAkBD,UAAUI,OAAOC,MAAMH"}