{"version":3,"file":"traverse-BDmGe7EO.js","names":["resource: unknown","arg: any","resource: any","typeHint?: string","traversals: TraversalMap","options: Partial<TraverseOptions>","traversal: (resource: any) => any","resource: T","collection: T","collectionOrManifest: Manifest | Collection","collection: Collection","parent?: any","geoJson: import('geojson').GeoJSON","manifest: Manifest","canvas: Canvas","annotationPage: AnnotationPage","annotation: Annotation","annotationPageJson: AnnotationPage","annotationBody: any","json: T","annotationJson: Annotation","contentResourceJson: ContentResource","choiceItem: ContentResource","specificResource: SpecificResource","range: Range","rangeOrManifest: RangeItems","agent: ResourceProvider","object: T","context: TraversalContext","traversals: Array<Traversal<T>>","acc: T","traversal: Traversal<T>","service: Service","_service: any","innerService: any"],"sources":["../src/shared/is-specific-resource.ts","../src/shared/compose.ts","../src/presentation-3/traverse.ts"],"sourcesContent":["import { SpecificResource } from '@iiif/presentation-3';\n\nexport function isSpecificResource(resource: unknown): resource is SpecificResource {\n  if (typeof resource === 'string') {\n    return false;\n  }\n\n  if (resource && !(resource as any).type && 'source' in (resource as any)) {\n    (resource as any).type = 'SpecificResource';\n    return true;\n  }\n\n  return !!resource && (resource as any).type === 'SpecificResource';\n}\n","export function compose<T, B = T>(...fns: any[]): (input: T) => T {\n  return <B>(arg: any) => fns.reduce((a, f) => f(a), arg) as any as T;\n}\n","import {\n  Annotation,\n  AnnotationCollection,\n  AnnotationPage,\n  Canvas,\n  ChoiceBody,\n  ChoiceTarget,\n  Collection,\n  ContentResource,\n  DescriptiveProperties,\n  IIIFExternalWebResource,\n  LinkingProperties,\n  Manifest,\n  Range,\n  RangeItems,\n  Required,\n  Service,\n  SpecificResource,\n  ResourceProvider,\n  StructuralProperties,\n} from '@iiif/presentation-3';\nimport { isSpecificResource } from '../shared/is-specific-resource';\nimport { ensureArray } from '../shared/ensure-array';\nimport { compose } from '../shared/compose';\n\nexport const types = [\n  'Collection',\n  'Manifest',\n  'Canvas',\n  'AnnotationPage',\n  'AnnotationCollection',\n  'Annotation',\n  'ContentResource',\n  'Range',\n  'Service',\n  'Selector',\n  'Agent',\n];\n\nexport type TraversalContext = { parent?: any };\n\nexport type Traversal<T> = (jsonLd: T, context: TraversalContext) => Partial<T> | any;\n\nexport type TraversalMap = {\n  collection?: Array<Traversal<Collection>>;\n  manifest?: Array<Traversal<Manifest>>;\n  canvas?: Array<Traversal<Canvas>>;\n  annotationCollection?: Array<Traversal<AnnotationCollection>>;\n  annotationPage?: Array<Traversal<AnnotationPage>>;\n  annotation?: Array<Traversal<Annotation>>;\n  contentResource?: Array<Traversal<ContentResource>>;\n  choice?: Array<Traversal<ChoiceTarget | ChoiceBody>>;\n  range?: Array<Traversal<Range>>;\n  service?: Array<Traversal<Service>>;\n  agent?: Array<Traversal<ResourceProvider>>;\n  specificResource?: Array<Traversal<SpecificResource>>;\n  geoJson?: Array<Traversal<import('geojson').GeoJSON>>;\n};\n\nexport type TraverseOptions = {\n  allowUndefinedReturn: boolean;\n};\n\nexport function identifyResource(resource: any, typeHint?: string): string {\n  if (typeof resource === 'undefined' || resource === null) {\n    throw new Error('Null or undefined is not a valid entity.');\n  }\n  if (Array.isArray(resource)) {\n    throw new Error('Array is not a valid entity');\n  }\n  if (typeof resource !== 'object') {\n    if (typeHint) {\n      return typeHint;\n    }\n    throw new Error(`${typeof resource} is not a valid entity`);\n  }\n\n  if (typeof resource!.type === 'string') {\n    const hasType = types.indexOf(resource.type);\n    if (hasType !== -1) {\n      return types[hasType]!;\n    }\n  }\n\n  if (resource!.profile) {\n    return 'Service';\n  }\n\n  throw new Error('Resource type is not known');\n}\n\nexport class Traverse {\n  private traversals: Required<TraversalMap>;\n\n  private options: TraverseOptions;\n\n  constructor(traversals: TraversalMap, options: Partial<TraverseOptions> = {}) {\n    this.traversals = {\n      collection: [],\n      manifest: [],\n      canvas: [],\n      annotationCollection: [],\n      annotationPage: [],\n      annotation: [],\n      contentResource: [],\n      choice: [],\n      range: [],\n      service: [],\n      agent: [],\n      specificResource: [],\n      geoJson: [],\n      ...traversals,\n    };\n    this.options = {\n      allowUndefinedReturn: false,\n      ...options,\n    };\n  }\n\n  static all(traversal: (resource: any) => any) {\n    return new Traverse({\n      collection: [traversal],\n      manifest: [traversal],\n      canvas: [traversal],\n      annotationCollection: [traversal],\n      annotationPage: [traversal],\n      annotation: [traversal],\n      contentResource: [traversal],\n      choice: [traversal],\n      range: [traversal],\n      service: [traversal],\n      geoJson: [traversal],\n      specificResource: [traversal],\n      agent: [traversal],\n    });\n  }\n\n  traverseDescriptive<T extends Partial<DescriptiveProperties>>(resource: T): T {\n    if (resource.thumbnail) {\n      resource.thumbnail = ensureArray(resource.thumbnail).map((thumbnail) =>\n        this.traverseType(thumbnail, { parent: resource }, this.traversals.contentResource)\n      );\n    }\n    if (resource.provider) {\n      resource.provider = resource.provider.map((agent) => this.traverseAgent(agent, resource));\n    }\n    return resource;\n  }\n\n  traverseLinking<T extends Partial<LinkingProperties>>(resource: T): T {\n    if (resource.seeAlso) {\n      resource.seeAlso = ensureArray(resource.seeAlso).map((content) =>\n        this.traverseType(content, { parent: resource }, this.traversals.contentResource)\n      );\n    }\n    if (resource.service) {\n      resource.service = ensureArray(resource.service).map((service) => this.traverseService(service));\n    }\n    if (resource.services) {\n      resource.services = ensureArray(resource.services).map((service) => this.traverseService(service, resource));\n    }\n    if (resource.logo) {\n      resource.logo = ensureArray(resource.logo).map((content) =>\n        this.traverseType(content, { parent: resource }, this.traversals.contentResource)\n      );\n    }\n    if (resource.homepage) {\n      resource.homepage = ensureArray(resource.homepage).map((homepage) =>\n        this.traverseType(homepage, { parent: resource }, this.traversals.contentResource)\n      );\n    }\n    if (resource.partOf) {\n      // Array<ContentResource | Canvas | AnnotationCollection>\n      (resource as any).partOf = resource.partOf.map((partOf) => {\n        if (typeof partOf === 'string' || !partOf.type) {\n          return this.traverseType(partOf as ContentResource, { parent: resource }, this.traversals.contentResource);\n        }\n        if (partOf.type === 'Canvas') {\n          return this.traverseType(partOf as Canvas, { parent: resource }, this.traversals.canvas);\n        }\n        if (partOf.type === 'AnnotationCollection') {\n          return this.traverseType(\n            partOf as AnnotationCollection,\n            { parent: resource },\n            this.traversals.annotationCollection\n          );\n        }\n        if (partOf.type === 'Collection') {\n          return this.traverseType(partOf as Collection, { parent: resource }, this.traversals.collection);\n        }\n        return this.traverseType(partOf as ContentResource, { parent: resource }, this.traversals.contentResource);\n      });\n    }\n    if (resource.start) {\n      if (isSpecificResource(resource.start)) {\n        resource.start = this.traverseSpecificResource(resource.start, 'Canvas', resource) as any;\n      } else {\n        // The spec says this can be a \"partial canvas\" causing errors with the types.\n        resource.start = this.traverseType(resource.start as any, { parent: resource }, this.traversals.canvas);\n      }\n    }\n    if (resource.rendering) {\n      resource.rendering = resource.rendering.map((content) =>\n        this.traverseType(content, { parent: resource }, this.traversals.contentResource)\n      );\n    }\n    if (resource.supplementary) {\n      resource.supplementary = resource.supplementary.map((content) =>\n        this.traverseType(content, { parent: resource }, this.traversals.contentResource)\n      );\n    }\n\n    return resource;\n  }\n\n  traverseCollectionItems<T extends StructuralProperties<any>>(collection: T): T {\n    if (collection.items) {\n      collection.items.map((collectionOrManifest: Manifest | Collection) => {\n        if (collectionOrManifest.type === 'Collection') {\n          return this.traverseCollection(collectionOrManifest as Collection);\n        }\n        return this.traverseManifest(collectionOrManifest as Manifest);\n      });\n    }\n\n    return collection;\n  }\n\n  traverseCollection(collection: Collection, parent?: any): Collection {\n    return this.traverseType<Collection>(\n      this.traverseDescriptive(\n        this.traverseNavPlace(\n          this.traverseInlineAnnotationPages(\n            this.traverseLinking(this.traverseLinkedCanvases(this.traverseCollectionItems(collection as any)))\n          )\n        )\n      ),\n      { parent },\n      this.traversals.collection\n    );\n  }\n\n  traverseGeoJson(geoJson: import('geojson').GeoJSON, parent?: any): import('geojson').GeoJSON {\n    return this.traverseType<import('geojson').GeoJSON>(geoJson, { parent }, this.traversals.geoJson);\n  }\n\n  traverseNavPlace(resource: any /*NavPlaceExtension*/) {\n    if (resource.navPlace) {\n      resource.navPlace = this.traverseGeoJson(resource.navPlace, resource);\n    }\n    return resource;\n  }\n\n  traverseManifestItems(manifest: Manifest): Manifest {\n    if (manifest.items) {\n      manifest.items = manifest.items.map((canvas) => this.traverseCanvas(canvas));\n    }\n    return manifest;\n  }\n\n  traverseManifestStructures(manifest: Manifest): Manifest {\n    if (manifest.structures) {\n      manifest.structures = manifest.structures.map((range) => this.traverseRange(range));\n    }\n    return manifest;\n  }\n\n  _traverseManifest: (manifest: Manifest) => Manifest = compose<Manifest>(\n    this.traverseManifestItems.bind(this),\n    this.traverseNavPlace.bind(this),\n    this.traverseLinking.bind(this),\n    this.traverseDescriptive.bind(this),\n    this.traverseLinkedCanvases.bind(this),\n    this.traverseManifestStructures.bind(this),\n    this.traverseInlineAnnotationPages.bind(this),\n  );\n\n  traverseManifest(manifest: Manifest, parent?: any): Manifest {\n    return this.traverseType<Manifest>(this._traverseManifest(manifest), { parent }, this.traversals.manifest);\n  }\n\n  traverseCanvasItems(canvas: Canvas): Canvas {\n    canvas.items = (canvas.items || []).map((annotationPage: AnnotationPage): AnnotationPage => {\n      return this.traverseAnnotationPage(annotationPage, canvas);\n    });\n\n    return canvas;\n  }\n\n  traverseInlineAnnotationPages<T extends Manifest | Canvas | Range | string>(resource: T): T {\n    if (typeof resource === 'string' || !resource) {\n      return resource;\n    }\n    if (resource.annotations) {\n      resource.annotations = resource.annotations.map((annotationPage: AnnotationPage): AnnotationPage => {\n        return this.traverseAnnotationPage(annotationPage, resource);\n      });\n    }\n\n    return resource;\n  }\n\n  _traverseCanvas: (canvas: Canvas) => Canvas = compose<Canvas>(\n    this.traverseCanvasItems.bind(this),\n    this.traverseLinking.bind(this),\n    this.traverseDescriptive.bind(this),\n    this.traverseLinkedCanvases.bind(this),\n    this.traverseInlineAnnotationPages.bind(this)\n  );\n\n  traverseCanvas(canvas: Canvas, parent?: any): Canvas {\n    return this.traverseType<Canvas>(this._traverseCanvas(canvas), { parent }, this.traversals.canvas);\n  }\n\n  traverseAnnotationPageItems(annotationPage: AnnotationPage): AnnotationPage {\n    if (annotationPage.items) {\n      annotationPage.items = annotationPage.items.map((annotation: Annotation): Annotation => {\n        return this.traverseAnnotation(annotation, annotationPage);\n      });\n    }\n    return annotationPage;\n  }\n\n  _traverseAnnotationPage: (page: AnnotationPage) => AnnotationPage = compose<AnnotationPage>(\n    this.traverseAnnotationPageItems.bind(this),\n    this.traverseLinking.bind(this),\n    this.traverseDescriptive.bind(this)\n  );\n\n  traverseAnnotationPage(annotationPageJson: AnnotationPage, parent?: any): AnnotationPage {\n    return this.traverseType<AnnotationPage>(\n      this._traverseAnnotationPage(annotationPageJson),\n      { parent },\n      this.traversals.annotationPage\n    );\n  }\n\n  // Disabling these.\n\n  traverseAnnotationBody(annotation: Annotation): Annotation {\n    if (Array.isArray(annotation.body)) {\n      annotation.body = annotation.body.map((annotationBody: any): ContentResource => {\n        return this.traverseContentResource(annotationBody, annotation);\n      });\n    } else if (annotation.body) {\n      annotation.body = this.traverseContentResource(annotation.body as ContentResource, annotation);\n    }\n\n    return annotation;\n  }\n\n  traverseLinkedCanvases<T extends { placeholderCanvas?: any; accompanyingCanvas?: any }>(json: T): T {\n    if (json.placeholderCanvas) {\n      json.placeholderCanvas = this.traverseCanvas(json.placeholderCanvas);\n    }\n\n    if (json.accompanyingCanvas) {\n      json.accompanyingCanvas = this.traverseCanvas(json.accompanyingCanvas);\n    }\n\n    return json;\n  }\n\n  // @todo traverseAnnotationSelector\n  traverseAnnotation(annotationJson: Annotation, parent?: any): Annotation {\n    return this.traverseType<Annotation>(\n      this.traverseLinking(this.traverseAnnotationBody(this.traverseDescriptive(annotationJson as any))),\n      { parent },\n      this.traversals.annotation\n    );\n  }\n\n  traverseContentResourceLinking(contentResourceJson: ContentResource): ContentResource {\n    if (typeof contentResourceJson === 'string' || !contentResourceJson) {\n      return contentResourceJson;\n    }\n    if (contentResourceJson && (contentResourceJson as IIIFExternalWebResource)!.service) {\n      (contentResourceJson as IIIFExternalWebResource).service = ensureArray(\n        (contentResourceJson as IIIFExternalWebResource).service || []\n      ).map((service) => this.traverseService(service, contentResourceJson));\n    }\n\n    return contentResourceJson;\n  }\n\n  traverseContentResource(contentResourceJson: ContentResource, parent?: any): ContentResource {\n    if ((contentResourceJson as any).type === 'Choice') {\n      (contentResourceJson as any).items = (contentResourceJson as any).items.map((choiceItem: ContentResource) => {\n        return this.traverseContentResource(choiceItem, contentResourceJson);\n      });\n    }\n\n    if (isSpecificResource(contentResourceJson)) {\n      return this.traverseSpecificResource(contentResourceJson, 'ContentResource');\n    }\n\n    return this.traverseType<ContentResource>(\n      // This needs an `any` because of the scope of W3C annotation bodies (covered by ContentResource).\n      // ContentResources are permitted to have a `.annotations` property, so we can pass it as any  for this\n      // case.\n      this.traverseInlineAnnotationPages(this.traverseContentResourceLinking(contentResourceJson) as any),\n      { parent },\n      this.traversals.contentResource\n    );\n  }\n\n  traverseSpecificResource(specificResource: SpecificResource, typeHint?: string, parent?: any): SpecificResource {\n    let source = specificResource.source;\n    if (typeof specificResource.source === 'string') {\n      source = { id: specificResource.source, type: typeHint || 'unknown' };\n    }\n\n    return this.traverseType<SpecificResource>(\n      {\n        ...specificResource,\n        source:\n          typeHint === 'Canvas' || source.type === 'Canvas'\n            ? this.traverseType(source, { parent }, this.traversals.canvas)\n            : typeHint === 'ContentResource'\n              ? this.traverseContentResource(source, { parent })\n              : this.traverseUnknown(source, { parent, typeHint }),\n      },\n      { parent },\n      this.traversals.specificResource\n    );\n  }\n\n  traverseRangeRanges(range: Range): Range {\n    if (range.items) {\n      range.items = range.items.map((rangeOrManifest: RangeItems) => {\n        if (typeof rangeOrManifest === 'string') {\n          return this.traverseCanvas({ id: rangeOrManifest, type: 'Canvas' }, range);\n        }\n        if (isSpecificResource(rangeOrManifest)) {\n          return this.traverseSpecificResource(rangeOrManifest, 'Canvas', range);\n        }\n        // This is a non-standard case.\n        if ((rangeOrManifest as any).type === 'Manifest') {\n          return this.traverseManifest(rangeOrManifest as any, range) as any as RangeItems;\n        }\n        return this.traverseRange(rangeOrManifest as Range, range);\n      });\n    }\n\n    return range;\n  }\n\n  _traverseRange: (range: Range) => Range = compose<Range>(\n    this.traverseRangeRanges.bind(this),\n    this.traverseLinking.bind(this),\n    this.traverseDescriptive.bind(this),\n    this.traverseLinkedCanvases.bind(this)\n  );\n\n  traverseRange(range: Range, parent?: any): Range {\n    return this.traverseType<Range>(this._traverseRange(range), { parent }, this.traversals.range);\n  }\n\n  traverseAgent(agent: ResourceProvider, parent?: any) {\n    return this.traverseType<ResourceProvider>(\n      this.traverseDescriptive(this.traverseLinking(agent)),\n      { parent },\n      this.traversals.agent\n    );\n  }\n\n  traverseType<T>(object: T, context: TraversalContext, traversals: Array<Traversal<T>>): T {\n    return traversals.reduce((acc: T, traversal: Traversal<T>): T => {\n      const returnValue = traversal(acc, context);\n      if (typeof returnValue === 'undefined' && !this.options.allowUndefinedReturn) {\n        return acc;\n      }\n      return returnValue;\n    }, object);\n  }\n\n  traverseService(service: Service, parent?: any): Service {\n    const _service: any = Object.assign({}, service);\n    if (_service && _service.service) {\n      _service.service = ensureArray(_service.service).map((innerService: any) => this.traverseService(innerService));\n    }\n    return this.traverseType<Service>(_service, { parent }, this.traversals.service);\n  }\n\n  traverseUnknown(\n    resource: any,\n    { parent, typeHint }: { typeHint?: string; parent?: any } = {}\n  ):\n    | Collection\n    | Manifest\n    | Canvas\n    | AnnotationPage\n    | Annotation\n    | ContentResource\n    | Range\n    | Service\n    | ResourceProvider {\n    const type = identifyResource(resource, typeHint);\n\n    switch (type) {\n      case 'Collection':\n        return this.traverseCollection(resource as Collection, parent);\n      case 'Manifest':\n        return this.traverseManifest(resource as Manifest, parent);\n      case 'Canvas':\n        return this.traverseCanvas(resource as Canvas, parent);\n      case 'AnnotationPage':\n        return this.traverseAnnotationPage(resource as AnnotationPage, parent);\n      case 'Annotation':\n        return this.traverseAnnotation(resource as Annotation, parent);\n      case 'ContentResource':\n        return this.traverseContentResource(resource as ContentResource, parent);\n      case 'Range':\n        return this.traverseRange(resource as Range, parent);\n      case 'Service':\n        return this.traverseService(resource as Service, parent);\n      case 'Agent':\n        return this.traverseAgent(resource as ResourceProvider, parent);\n      default: {\n        throw new Error(`Unknown or unsupported resource type of ${type}`);\n      }\n    }\n  }\n}\n"],"mappings":"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"}