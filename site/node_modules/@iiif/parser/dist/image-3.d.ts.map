{"version":3,"file":"image-3.d.ts","names":["SizeParameter","RegionParameter","RotationParameter","ImageServiceImageRequest","parseImageServerFromId","ImageServiceImageRequest","parseImageServiceRequest","parseImageServiceUrl","RegionParameter","parseRegionParameter","RotationParameter","parseRotationParameter","SizeParameter","parseSizeParameter","STANFORD_IIIF_IMAGE_COMPLIANCE_0","STANFORD_IIIF_IMAGE_COMPLIANCE_1","STANFORD_IIIF_IMAGE_COMPLIANCE_2","STANFORD_IIIF_IMAGE_CONFORMANCE_0","STANFORD_IIIF_IMAGE_CONFORMANCE_1","STANFORD_IIIF_IMAGE_CONFORMANCE_2","STANFORD_IIIF_1_IMAGE_COMPLIANCE_0","STANFORD_IIIF_1_IMAGE_COMPLIANCE_1","STANFORD_IIIF_1_IMAGE_COMPLIANCE_2","STANFORD_IIIF_1_IMAGE_CONFORMANCE_0","STANFORD_IIIF_1_IMAGE_CONFORMANCE_1","STANFORD_IIIF_1_IMAGE_CONFORMANCE_2","IIIF_1_IMAGE_LEVEL_0","IIIF_1_IMAGE_LEVEL_0_PROFILE","IIIF_1_IMAGE_LEVEL_1","IIIF_1_IMAGE_LEVEL_1_PROFILE","IIIF_1_IMAGE_LEVEL_2","IIIF_1_IMAGE_LEVEL_2_PROFILE","IIIF_2_IMAGE_LEVEL_0","IIIF_2_IMAGE_LEVEL_0_PROFILE","IIIF_2_IMAGE_LEVEL_1","IIIF_2_IMAGE_LEVEL_1_PROFILE","IIIF_2_IMAGE_LEVEL_2","IIIF_2_IMAGE_LEVEL_2_PROFILE","IIIF_3_IMAGE_LEVEL_0","IIIF_3_IMAGE_LEVEL_1","IIIF_3_IMAGE_LEVEL_2","IIIF_2_IMAGE_LEVEL_0_NO_JSON","IIIF_2_IMAGE_LEVEL_1_NO_JSON","IIIF_2_IMAGE_LEVEL_2_NO_JSON","level2Support","level1Support","imageServiceProfiles","level0Support","onlyLevel0","Profile","ExtraFeature","level0","level1","level2","extraFeatures","ReadonlyArray","ElementType","Profile","ImageService","combineProfiles","Profile","levelToProfile","ImageService","isLevel0","ImageService","Profile","supports","Partial","ImageService","supportsCustomSizes","ImageService","imageServiceSupportsFormat","ImageService","ImageServiceImageRequest","imageServiceSupportsRequest","ImageServiceImageRequest","ImageService","imageServiceRequestToString","ImageService","ImageServiceImageRequest","imageServiceRequestInfo","RegionParameter","regionParameterToString","x","y","w","h","full","square","percent","RotationParameter","rotationParameterToString","SizeParameter","sizeParameterToString","max","percentScale","upscaled","confined","width","height","serialiseAsFull","version","canonicalServiceUrl","ImageService","ImageServiceImageRequest","createImageServiceRequest","ImageSize","extractFixedSizeScales","ImageSize","fixedSizesFromScales","getId","ImageService","getImageServiceLevel","ImageService","Service","getImageServices","Array","getType","identifyImageServer","ImageService","isImageService","ImageService","isImageServiceLevel"],"sources":["../src/image-3/types.d.ts","../src/image-3/parser/parse-image-server-from-id.d.ts","../src/image-3/parser/parse-image-service-request.d.ts","../src/image-3/parser/parse-image-service-url.d.ts","../src/image-3/parser/parse-region-parameter.d.ts","../src/image-3/parser/parse-rotation-parameter.d.ts","../src/image-3/parser/parse-size-parameter.d.ts","../src/image-3/profiles/profiles.d.ts","../src/image-3/profiles/combine-profiles.d.ts","../src/image-3/profiles/level-to-profile.d.ts","../src/image-3/profiles/is-level-0.d.ts","../src/image-3/profiles/supports.d.ts","../src/image-3/profiles/supports-custom-sizes.d.ts","../src/image-3/profiles/image-service-supports-format.d.ts","../src/image-3/profiles/image-service-supports-request.d.ts","../src/image-3/serialize/image-service-request-to-string.d.ts","../src/image-3/serialize/image-service-request-info.d.ts","../src/image-3/serialize/region-parameter-to-string.d.ts","../src/image-3/serialize/rotation-parameter-to-string.d.ts","../src/image-3/serialize/size-parameter-to-string.d.ts","../src/image-3/utilities/canonical-service-url.d.ts","../src/image-3/utilities/create-image-service-request.d.ts","../src/image-3/utilities/extract-fixed-size-scales.d.ts","../src/image-3/utilities/fixed-sizes-from-scales.d.ts","../src/image-3/utilities/get-id.d.ts","../src/image-3/utilities/get-image-service-level.d.ts","../src/image-3/utilities/get-image-services.d.ts","../src/image-3/utilities/get-type.d.ts","../src/image-3/utilities/identify-image-server.d.ts","../src/image-3/utilities/is-image-service.d.ts","../src/image-3/utilities/is-image-service-level.d.ts"],"sourcesContent":["/**\n * Size parameter\n *\n * Represents the {size} parameter of a IIIF image request.\n * see https://iiif.io/api/image/3.0/#42-size\n * Port of https://github.com/digirati-co-uk/iiif-net/blob/main/src/IIIF/IIIF/ImageApi/SizeParameter.cs\n */\nexport type SizeParameter = {\n    height?: number;\n    width?: number;\n    max: boolean;\n    serialiseAsFull?: boolean;\n    upscaled: boolean;\n    confined: boolean;\n    percentScale?: number;\n    version?: 2 | 3;\n};\n/**\n * Region parameter\n *\n * Represents the {region} parameter of a IIIF image request.\n * see https://iiif.io/api/image/3.0/#41-region\n * Port of https://github.com/digirati-co-uk/iiif-net/blob/main/src/IIIF/IIIF/ImageApi/RegionParameter.cs\n */\nexport type RegionParameter = {\n    x?: number;\n    y?: number;\n    w?: number;\n    h?: number;\n    full?: boolean;\n    square?: boolean;\n    percent?: boolean;\n};\n/**\n * Rotation parameter\n *\n * Represents the {rotation} parameter of a IIIF image request.\n * see https://iiif.io/api/image/3.0/#43-rotation\n * Port of https://github.com/digirati-co-uk/iiif-net/blob/main/src/IIIF/IIIF/ImageApi/RotationParameter.cs\n */\nexport type RotationParameter = {\n    mirror?: boolean;\n    angle: number;\n};\nexport type ImageServiceImageRequest = {\n    type: 'base';\n    scheme: string;\n    server: string;\n    prefix: string;\n    identifier: string;\n} | {\n    type: 'info';\n    scheme: string;\n    server: string;\n    prefix: string;\n    identifier: string;\n} | {\n    type: 'image';\n    scheme: string;\n    server: string;\n    prefix: string;\n    identifier: string;\n    region: RegionParameter;\n    size: SizeParameter;\n    rotation: RotationParameter;\n    quality: string;\n    format: string;\n    originalPath: string;\n};\n","/**\n * Get image server from ID.\n *\n * Normalises image service URLs to extract identity of the image server.\n *\n * @param url\n */\nexport declare function parseImageServerFromId(url: string): string;\n","import { ImageServiceImageRequest } from '../types';\nexport declare function parseImageServiceRequest(input: string, _prefix?: string): ImageServiceImageRequest;\n","export declare function parseImageServiceUrl(canonicalId: string, prefix?: string): {\n    scheme: string;\n    server: string;\n    path: string;\n    prefix: string;\n};\n","import { RegionParameter } from '../types';\nexport declare function parseRegionParameter(pathPart: string): RegionParameter;\n","import { RotationParameter } from '../types';\nexport declare function parseRotationParameter(pathPart: string): RotationParameter;\n","import { SizeParameter } from '../types';\nexport declare function parseSizeParameter(pathPart: string): SizeParameter;\n","export declare const STANFORD_IIIF_IMAGE_COMPLIANCE_0 = \"http://library.stanford.edu/iiif/image-api/compliance.html#level0\";\nexport declare const STANFORD_IIIF_IMAGE_COMPLIANCE_1 = \"http://library.stanford.edu/iiif/image-api/compliance.html#level1\";\nexport declare const STANFORD_IIIF_IMAGE_COMPLIANCE_2 = \"http://library.stanford.edu/iiif/image-api/compliance.html#level2\";\nexport declare const STANFORD_IIIF_IMAGE_CONFORMANCE_0 = \"http://library.stanford.edu/iiif/image-api/conformance.html#level0\";\nexport declare const STANFORD_IIIF_IMAGE_CONFORMANCE_1 = \"http://library.stanford.edu/iiif/image-api/conformance.html#level1\";\nexport declare const STANFORD_IIIF_IMAGE_CONFORMANCE_2 = \"http://library.stanford.edu/iiif/image-api/conformance.html#level2\";\nexport declare const STANFORD_IIIF_1_IMAGE_COMPLIANCE_0 = \"http://library.stanford.edu/iiif/image-api/1.1/compliance.html#level0\";\nexport declare const STANFORD_IIIF_1_IMAGE_COMPLIANCE_1 = \"http://library.stanford.edu/iiif/image-api/1.1/compliance.html#level1\";\nexport declare const STANFORD_IIIF_1_IMAGE_COMPLIANCE_2 = \"http://library.stanford.edu/iiif/image-api/1.1/compliance.html#level2\";\nexport declare const STANFORD_IIIF_1_IMAGE_CONFORMANCE_0 = \"http://library.stanford.edu/iiif/image-api/1.1/conformance.html#level0\";\nexport declare const STANFORD_IIIF_1_IMAGE_CONFORMANCE_1 = \"http://library.stanford.edu/iiif/image-api/1.1/conformance.html#level1\";\nexport declare const STANFORD_IIIF_1_IMAGE_CONFORMANCE_2 = \"http://library.stanford.edu/iiif/image-api/1.1/conformance.html#level2\";\nexport declare const IIIF_1_IMAGE_LEVEL_0 = \"http://iiif.io/api/image/1/level0.json\";\nexport declare const IIIF_1_IMAGE_LEVEL_0_PROFILE = \"http://iiif.io/api/image/1/profiles/level0.json\";\nexport declare const IIIF_1_IMAGE_LEVEL_1 = \"http://iiif.io/api/image/1/level1.json\";\nexport declare const IIIF_1_IMAGE_LEVEL_1_PROFILE = \"http://iiif.io/api/image/1/profiles/level1.json\";\nexport declare const IIIF_1_IMAGE_LEVEL_2 = \"http://iiif.io/api/image/1/level2.json\";\nexport declare const IIIF_1_IMAGE_LEVEL_2_PROFILE = \"http://iiif.io/api/image/1/profiles/level2.json\";\nexport declare const IIIF_2_IMAGE_LEVEL_0 = \"http://iiif.io/api/image/2/level0.json\";\nexport declare const IIIF_2_IMAGE_LEVEL_0_PROFILE = \"http://iiif.io/api/image/2/profiles/level0.json\";\nexport declare const IIIF_2_IMAGE_LEVEL_1 = \"http://iiif.io/api/image/2/level1.json\";\nexport declare const IIIF_2_IMAGE_LEVEL_1_PROFILE = \"http://iiif.io/api/image/2/profiles/level1.json\";\nexport declare const IIIF_2_IMAGE_LEVEL_2 = \"http://iiif.io/api/image/2/level2.json\";\nexport declare const IIIF_2_IMAGE_LEVEL_2_PROFILE = \"http://iiif.io/api/image/2/profiles/level2.json\";\nexport declare const IIIF_3_IMAGE_LEVEL_0 = \"level0\";\nexport declare const IIIF_3_IMAGE_LEVEL_1 = \"level1\";\nexport declare const IIIF_3_IMAGE_LEVEL_2 = \"level2\";\nexport declare const IIIF_2_IMAGE_LEVEL_0_NO_JSON = \"http://iiif.io/api/image/2/level0\";\nexport declare const IIIF_2_IMAGE_LEVEL_1_NO_JSON = \"http://iiif.io/api/image/2/level1\";\nexport declare const IIIF_2_IMAGE_LEVEL_2_NO_JSON = \"http://iiif.io/api/image/2/level2\";\nexport declare const level2Support: string[];\nexport declare const level1Support: string[];\nexport declare const imageServiceProfiles: string[];\nexport declare const level0Support: string[];\nexport declare const onlyLevel0: string[];\nexport type Profile = {\n    extraFormats: string[];\n    extraQualities: string[];\n    extraFeatures: ExtraFeature[];\n    maxArea?: number;\n    maxHeight?: number;\n    maxWidth?: number;\n};\nexport declare const level0: Profile;\nexport declare const level1: Profile;\nexport declare const level2: Profile;\nexport declare const extraFeatures: readonly [\"baseUriRedirect\", \"canonicalLinkHeader\", \"cors\", \"jsonldMediaType\", \"mirroring\", \"profileLinkHeader\", \"regionByPct\", \"regionByPx\", \"regionSquare\", \"rotationArbitrary\", \"rotationBy90s\", \"sizeByConfinedWh\", \"sizeByH\", \"sizeByPct\", \"sizeByW\", \"sizeByWh\", \"sizeUpscaling\", \"sizeByWhListed\", \"sizeByDistortedWh\", \"sizeByForcedWh\"];\nexport type ExtraFeature = typeof extraFeatures extends ReadonlyArray<infer ElementType> ? ElementType : never;\n","import { Profile } from './profiles';\nimport { ImageService } from '@iiif/presentation-3';\nexport declare function combineProfiles(service: ImageService): Profile;\n","import { Profile } from './profiles';\nexport declare function levelToProfile(levelProfile: string): Profile;\n","import { ImageService } from '@iiif/presentation-3';\nexport declare function isLevel0(service: ImageService): boolean;\n","import { ImageService } from '@iiif/presentation-3';\nimport { Profile } from './profiles';\nexport declare function supports(service: ImageService, req: Partial<Profile> & {\n    exactSize?: {\n        width?: number;\n        height?: number;\n    };\n}): readonly [false, \"Not a valid image service\"] | readonly [false, `Max area is ${number}`] | readonly [false, `Max width is ${number}`] | readonly [false, `Max height is ${number}`] | readonly [false, `Missing features: ${string}`] | readonly [false, `Missing formats: ${string}`] | readonly [false, `Missing qualities: ${string}`] | readonly [true];\n","import { ImageService } from '@iiif/presentation-3';\nexport declare function supportsCustomSizes(service: ImageService): boolean;\n","import { ImageService } from '@iiif/presentation-3';\nexport declare function imageServiceSupportsFormat(imageService: ImageService, format: string): readonly [false, \"Not a valid image service\"] | readonly [false, `Max area is ${number}`] | readonly [false, `Max width is ${number}`] | readonly [false, `Max height is ${number}`] | readonly [false, `Missing features: ${string}`] | readonly [false, `Missing formats: ${string}`] | readonly [false, `Missing qualities: ${string}`] | readonly [true];\n","import { ImageService } from '@iiif/presentation-3';\nimport { ImageServiceImageRequest } from '../types';\nexport declare function imageServiceSupportsRequest(imageService: ImageService, request: ImageServiceImageRequest): readonly [true] | boolean[] | readonly [false, \"Not a valid image service\" | `Max area is ${number}` | `Max width is ${number}` | `Max height is ${number}` | `Missing features: ${string}` | `Missing formats: ${string}` | `Missing qualities: ${string}`];\n","import { ImageServiceImageRequest } from '../types';\nimport { ImageService } from '@iiif/presentation-3';\nexport declare function imageServiceRequestToString(req: ImageServiceImageRequest, service?: ImageService): string;\n","import { ImageService } from \"@iiif/presentation-3\";\nimport { ImageServiceImageRequest } from \"../types\";\nexport declare function imageServiceRequestInfo(req: ImageServiceImageRequest, service?: ImageService): string;\n","import { RegionParameter } from '../types';\nexport declare function regionParameterToString({ x, y, w, h, full, square, percent }: RegionParameter): string;\n","import { RotationParameter } from '../types';\nexport declare function rotationParameterToString(rotationParameter: RotationParameter): string;\n","import { SizeParameter } from '../types';\nexport declare function sizeParameterToString({ max, percentScale, upscaled, confined, width, height, serialiseAsFull, version, }: SizeParameter): string;\n","/**\n * Get canonical service url\n * Ensures an image service id contains the /info.json on the end of it.\n *\n * @param serviceId\n */\nexport declare function canonicalServiceUrl(serviceId: string): string;\n","import { ImageService } from '@iiif/presentation-3';\nimport { ImageServiceImageRequest } from '../types';\nexport declare function createImageServiceRequest(imageService: ImageService): ImageServiceImageRequest;\n","import { ImageSize } from '@iiif/presentation-3';\n/**\n * Extract fixed size scales\n *\n * Given a source width and height and a list of sizes of that same image,\n * it will return an ordered list of scales.\n *\n * @param width\n * @param height\n * @param sizes\n */\nexport declare function extractFixedSizeScales(width: number, height: number, sizes: ImageSize[]): number[];\n","import { ImageSize } from '@iiif/presentation-3';\n/**\n * Fixed sizes from scales.\n *\n * Given a width and height of an image and a list of scales, this will return\n * an ordered list of widths and heights of the image at those scales.\n *\n * @param width\n * @param height\n * @param scales\n */\nexport declare function fixedSizesFromScales(width: number, height: number, scales: number[]): ImageSize[];\n","export declare function getId(resource: any): any;\n","import { ImageService } from '@iiif/presentation-3';\nexport declare function getImageServiceLevel(service: ImageService): null | number;\n","import { ImageService, Service } from '@iiif/presentation-3';\n/**\n * Given a resource, will return only the image services on that resource.\n *\n * @param resource\n */\nexport declare function getImageServices(resource: {\n    service?: Array<Service>;\n}): ImageService[];\n","export declare function getType(resource: any): any;\n","/**\n * Get image server from ID.\n *\n * Normalises image service URLs to extract identity of the image server.\n *\n * @param url\n */\nexport declare function identifyImageServer(url: string): string;\n","import { ImageService } from '@iiif/presentation-3';\nexport declare function isImageService(service: any): service is ImageService;\n","import { ImageService } from '@iiif/presentation-3';\nexport declare function isImageServiceLevel(level: 0 | 1 | 2, imageService?: ImageService): boolean;\n"],"mappings":"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"}