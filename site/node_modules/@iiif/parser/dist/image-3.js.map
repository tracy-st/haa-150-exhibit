{"version":3,"file":"image-3.js","names":["url: string","pathPart: string","pathPart: string","size: SizeParameter","pathPart: string","rotation: RotationParameter","canonicalId: string","input: string","levelProfile: string","service: ImageService","profiles: any[]","final: Profile","service: ImageService","resource: any","service: any","service: ImageService","req: Partial<Profile> & { exactSize?: { width?: number; height?: number } }","service: ImageService","supports","imageService: ImageService","format: string","imageService: ImageService","request: ImageServiceImageRequest","extraFeatures: ExtraFeature[]","extraFeatures","sb: string[]","rotationParameter: RotationParameter","req: ImageServiceImageRequest","service?: ImageService","req: ImageServiceImageRequest","service?: ImageService","serviceId: string","imageService: ImageService","width: number","height: number","sizes: ImageSize[]","width: number","height: number","scales: number[]","sizes: ImageSize[]","level: 0 | 1 | 2","imageService?: ImageService","service: ImageService","resource: { service?: Array<Service> }","resource: any","url: string"],"sources":["../src/image-3/parser/parse-image-server-from-id.ts","../src/image-3/parser/parse-region-parameter.ts","../src/image-3/parser/parse-size-parameter.ts","../src/image-3/parser/parse-rotation-parameter.ts","../src/image-3/parser/parse-image-service-url.ts","../src/image-3/parser/parse-image-service-request.ts","../src/image-3/profiles/level-to-profile.ts","../src/image-3/profiles/combine-profiles.ts","../src/image-3/profiles/is-level-0.ts","../src/image-3/utilities/get-id.ts","../src/image-3/utilities/is-image-service.ts","../src/image-3/profiles/supports.ts","../src/image-3/profiles/supports-custom-sizes.ts","../src/image-3/profiles/image-service-supports-format.ts","../src/image-3/profiles/image-service-supports-request.ts","../src/image-3/serialize/region-parameter-to-string.ts","../src/image-3/serialize/size-parameter-to-string.ts","../src/image-3/serialize/rotation-parameter-to-string.ts","../src/image-3/serialize/image-service-request-to-string.ts","../src/image-3/serialize/image-service-request-info.ts","../src/image-3/utilities/canonical-service-url.ts","../src/image-3/utilities/create-image-service-request.ts","../src/image-3/utilities/extract-fixed-size-scales.ts","../src/image-3/utilities/fixed-sizes-from-scales.ts","../src/image-3/utilities/is-image-service-level.ts","../src/image-3/utilities/get-image-service-level.ts","../src/image-3/utilities/get-image-services.ts","../src/image-3/utilities/get-type.ts","../src/image-3/utilities/identify-image-server.ts"],"sourcesContent":["/**\n * Get image server from ID.\n *\n * Normalises image service URLs to extract identity of the image server.\n *\n * @param url\n */\nexport function parseImageServerFromId(url: string): string {\n  // Strip off the protocol + www\n  const id = url.replace(/(https?:\\/\\/)?(www.)?/i, '');\n\n  // Strip off the path.\n  if (id.indexOf('/') !== -1) {\n    return id.split('/')[0]!;\n  }\n\n  // Return the id.\n  return id;\n}\n","import { RegionParameter } from '../types';\n\nexport function parseRegionParameter(pathPart: string): RegionParameter {\n  try {\n    if (pathPart === 'full') {\n      return { full: true };\n    }\n    if (pathPart === 'square') {\n      return { square: true };\n    }\n\n    const percent = pathPart.startsWith('pct:');\n    const stringParts = pathPart.substr(percent ? 4 : 0).split(',');\n    const xywh = stringParts.map((part) => parseFloat(part));\n    return {\n      x: xywh[0],\n      y: xywh[1],\n      w: xywh[2],\n      h: xywh[3],\n      percent: percent,\n    };\n  } catch {\n    throw new Error(\"Expected 'full', 'square' or 'x,y,w,h'. Found \" + pathPart);\n  }\n}\n","import { SizeParameter } from '../types';\n\nexport function parseSizeParameter(pathPart: string): SizeParameter {\n  const size: SizeParameter = {\n    upscaled: false,\n    max: false,\n    confined: false,\n  };\n\n  if (pathPart[0] === '^') {\n    size.upscaled = true;\n    pathPart = pathPart.slice(1);\n  }\n\n  if (pathPart === 'max' || pathPart === 'full') {\n    size.max = true;\n    size.serialiseAsFull = pathPart === 'full';\n    return size;\n  }\n\n  if (pathPart[0] === '!') {\n    size.confined = true;\n    pathPart = pathPart.slice(1);\n  }\n\n  if (pathPart[0] === 'p') {\n    size.percentScale = parseFloat(pathPart.slice(4));\n    return size;\n  }\n\n  const wh = pathPart.split(',').map((t) => t.trim());\n  if (wh.length) {\n    if (wh[0] !== '') {\n      size.width = parseInt(wh[0]!, 10);\n    }\n\n    if (wh[1] !== '') {\n      size.height = parseInt(wh[1]!, 10);\n    }\n  }\n\n  return size;\n}\n","import { RotationParameter } from '../types';\n\nexport function parseRotationParameter(pathPart: string): RotationParameter {\n  const rotation: RotationParameter = { angle: 0 };\n  if (pathPart[0] === '!') {\n    rotation.mirror = true;\n    pathPart = pathPart.substr(1);\n  }\n\n  rotation.angle = parseFloat(pathPart) % 360;\n  if (Number.isNaN(rotation.angle)) {\n    throw new Error(`Invalid rotation ${pathPart}`);\n  }\n  return rotation;\n}\n","export function parseImageServiceUrl(canonicalId: string, prefix = '') {\n  const parsedUrl = canonicalId.match(/^(([a-zA-Z]+):\\/\\/([^/]+))?((.*)+)/);\n  if (!parsedUrl) {\n    throw new Error(`Invalid or unknown input ${canonicalId}`);\n  }\n  const scheme = parsedUrl[2];\n  const server = parsedUrl[3];\n  let path = parsedUrl[4]!;\n  if (path[0] === '/') {\n    path = path.substring(1);\n  }\n  if (prefix.length > 0) {\n    if (prefix[0] === '/') {\n      prefix = prefix.substring(1);\n    }\n    if (prefix !== path.substring(0, prefix.length)) {\n      throw new Error(`Path does not start with prefix (path: ${path}, prefix: ${prefix})`);\n    }\n    path = path.substring(prefix.length);\n  }\n\n  return {\n    scheme,\n    server,\n    path,\n    prefix,\n  } as {\n    scheme: string;\n    server: string;\n    path: string;\n    prefix: string;\n  };\n}\n","import { parseRegionParameter } from './parse-region-parameter';\nimport { parseSizeParameter } from './parse-size-parameter';\nimport { parseRotationParameter } from './parse-rotation-parameter';\nimport { ImageServiceImageRequest } from '../types';\nimport { parseImageServiceUrl } from './parse-image-service-url';\n\nexport function parseImageServiceRequest(input: string, _prefix = ''): ImageServiceImageRequest {\n  const { path, scheme, server, prefix } = parseImageServiceUrl(input, _prefix);\n\n  const parts = path.split('/').reverse();\n  const [fileName, rotation, size, region, ...others] = parts;\n  const identifier = others.reverse().filter(Boolean).join('/');\n\n  if (parts.length === 1 || fileName === '') {\n    // likely the server will want to redirect this\n    return { type: 'base', scheme, server, prefix, identifier };\n  }\n\n  if (fileName === 'info.json') {\n    const [, ...identifierParts] = parts;\n\n    return {\n      type: 'info',\n      scheme,\n      server,\n      prefix,\n      identifier: identifierParts.reverse().filter(Boolean).join('/'),\n    };\n  }\n\n  if (\n    typeof scheme === 'undefined' ||\n    typeof server === 'undefined' ||\n    typeof path === 'undefined' ||\n    typeof region === 'undefined' ||\n    typeof size === 'undefined' ||\n    typeof rotation === 'undefined' ||\n    typeof fileName === 'undefined'\n  ) {\n    throw new Error('Invalid image service URL');\n  }\n\n  const [quality = '', format = ''] = fileName.split('.');\n\n  return {\n    type: 'image',\n    scheme,\n    server,\n    prefix,\n    identifier,\n    originalPath: path,\n    region: parseRegionParameter(region),\n    size: parseSizeParameter(size),\n    rotation: parseRotationParameter(rotation),\n    quality,\n    format,\n  };\n}\n","import { level0, level1, level1Support, level2, level2Support, Profile } from './profiles';\n\nexport function levelToProfile(levelProfile: string): Profile {\n  const isLevel2 = level2Support.indexOf(levelProfile) !== -1;\n  if (isLevel2) {\n    return level2;\n  }\n  const isLevel1 = level1Support.indexOf(levelProfile) !== -1;\n  if (isLevel1) {\n    return level1;\n  }\n\n  // The minimum.\n  return level0;\n}\n","import { levelToProfile } from './level-to-profile';\nimport { Profile } from './profiles';\nimport { ImageService } from '@iiif/presentation-3';\n\nexport function combineProfiles(service: ImageService): Profile {\n  const profiles: any[] = service ? (Array.isArray(service.profile) ? service.profile : [service.profile]) : [];\n  const final: Profile = {\n    extraQualities: [],\n    extraFormats: [],\n    extraFeatures: [],\n  };\n\n  for (let profile of profiles) {\n    if (typeof profile === 'string') {\n      profile = levelToProfile(profile);\n    }\n\n    if (!profile) {\n      continue;\n    }\n\n    // Merging Image 2.1.1\n    if (profile.formats) {\n      for (const format of profile.formats) {\n        if (final.extraFormats.indexOf(format) === -1) {\n          final.extraFormats.push(format);\n        }\n      }\n    }\n    if (profile.qualities) {\n      for (const format of profile.qualities) {\n        if (final.extraQualities.indexOf(format) === -1) {\n          final.extraQualities.push(format);\n        }\n      }\n    }\n    if (profile.supports) {\n      for (const feature of profile.supports) {\n        if (final.extraFeatures.indexOf(feature as any) === -1) {\n          final.extraFeatures.push(feature as any);\n        }\n      }\n    }\n\n    if (profile.maxHeight) {\n      final.maxHeight = profile.maxHeight;\n    }\n    if (profile.maxWidth) {\n      final.maxWidth = profile.maxWidth;\n    }\n    if (profile.maxArea) {\n      final.maxArea = profile.maxArea;\n    }\n\n    // Merging Image 3.0\n    if (profile.extraFormats) {\n      for (const format of profile.extraFormats) {\n        if (final.extraFormats.indexOf(format) === -1) {\n          final.extraFormats.push(format);\n        }\n      }\n    }\n    if (profile.extraQualities) {\n      for (const format of profile.extraQualities) {\n        if (final.extraQualities.indexOf(format) === -1) {\n          final.extraQualities.push(format);\n        }\n      }\n    }\n    if (profile.extraFeatures) {\n      for (const feature of profile.extraFeatures) {\n        if (final.extraFeatures.indexOf(feature as any) === -1) {\n          final.extraFeatures.push(feature as any);\n        }\n      }\n    }\n\n    if (profile.maxHeight) {\n      final.maxHeight = profile.maxHeight;\n    }\n    if (profile.maxWidth) {\n      final.maxWidth = profile.maxWidth;\n    }\n    if (profile.maxArea) {\n      final.maxArea = profile.maxArea;\n    }\n  }\n\n  if (service.extraFormats) {\n    for (const format of service.extraFormats) {\n      if (final.extraFormats.indexOf(format) === -1) {\n        final.extraFormats.push(format);\n      }\n    }\n  }\n  if (service.extraFeatures) {\n    for (const feature of service.extraFeatures) {\n      if (final.extraFeatures.indexOf(feature as any) === -1) {\n        final.extraFeatures.push(feature as any);\n      }\n    }\n  }\n  if (service.extraQualities) {\n    for (const quality of service.extraQualities) {\n      if (final.extraQualities.indexOf(quality as any) === -1) {\n        final.extraQualities.push(quality as any);\n      }\n    }\n  }\n\n  return final;\n}\n","import { ImageService } from '@iiif/presentation-3';\nimport { onlyLevel0 } from './profiles';\n\nexport function isLevel0(service: ImageService) {\n  const profile = Array.isArray(service.profile) ? service.profile : [service.profile];\n\n  for (const single of profile) {\n    if (typeof single === 'string' && onlyLevel0.indexOf(single) !== -1) {\n      return true;\n    }\n  }\n\n  return false;\n}\n","export function getId(resource: any) {\n  if (resource['@id']) {\n    return resource['@id'];\n  }\n\n  if (resource.id) {\n    return resource.id;\n  }\n\n  return undefined;\n}\n","import { imageServiceProfiles } from '../profiles/profiles';\nimport { ImageService } from '@iiif/presentation-3';\nimport { getId } from './get-id';\n\nexport function isImageService(service: any): service is ImageService {\n  if (!service || !service.profile) {\n    return false;\n  }\n\n  if (!getId(service)) {\n    return false;\n  }\n\n  const profiles = Array.isArray(service.profile) ? service.profile : [service.profile];\n\n  for (const profile of profiles) {\n    if (typeof profile === 'string' && imageServiceProfiles.indexOf(profile) !== -1) {\n      return true;\n    }\n  }\n\n  return false;\n}\n","import { ImageService } from '@iiif/presentation-3';\nimport { extraFeatures, Profile } from './profiles';\nimport { isImageService } from '../utilities/is-image-service';\nimport { combineProfiles } from './combine-profiles';\n\nexport function supports(\n  service: ImageService,\n  req: Partial<Profile> & { exactSize?: { width?: number; height?: number } }\n) {\n  if (!isImageService(service)) {\n    return [false, 'Not a valid image service'] as const;\n  }\n\n  req.extraFeatures = req.extraFeatures ? req.extraFeatures : [];\n\n  const combined = combineProfiles(service);\n\n  if (req.exactSize) {\n    let valid = false;\n    // 1. Check sizes.\n    if (service.sizes) {\n      for (const size of service.sizes) {\n        if (size.width && size.width === req.exactSize.width) {\n          if (extraFeatures.indexOf('sizeByW') !== -1) {\n            valid = true;\n          } else if (size.height && size.height === req.exactSize.height) {\n            valid = true;\n          }\n        }\n        if (size.height && size.height === req.exactSize.height) {\n          if (extraFeatures.indexOf('sizeByH') !== -1) {\n            valid = true;\n          } else if (size.width && size.width === req.exactSize.width) {\n            valid = true;\n          }\n        }\n      }\n    }\n\n    if (!valid) {\n      req.maxWidth = Math.max(req.maxWidth || 0, req.exactSize.width || 0) || undefined;\n      req.maxHeight = Math.max(req.maxHeight || 0, req.exactSize.height || 0) || undefined;\n      req.maxArea =\n        Math.max(\n          req.maxArea || 0,\n          (req.exactSize.width && req.exactSize.height ? req.exactSize.width * req.exactSize.height : req.maxArea) || 0\n        ) || undefined;\n\n      if (!req.exactSize.height && req.exactSize.width) {\n        if (req.extraFeatures.indexOf('sizeByW') === -1) {\n          req.extraFeatures.push('sizeByW');\n        }\n      } else if (!req.exactSize.width && req.exactSize.height) {\n        if (req.extraFeatures.indexOf('sizeByH') === -1) {\n          req.extraFeatures.push('sizeByH');\n        }\n      }\n    }\n  }\n\n  if (req.maxArea && combined.maxArea && req.maxArea > combined.maxArea) {\n    return [false, `Max area is ${combined.maxArea}`] as const;\n  }\n\n  if (req.maxWidth && combined.maxWidth && req.maxWidth > combined.maxWidth) {\n    return [false, `Max width is ${combined.maxWidth}`] as const;\n  }\n\n  if (req.maxHeight && combined.maxHeight && req.maxHeight > combined.maxHeight) {\n    return [false, `Max height is ${combined.maxHeight}`] as const;\n  }\n\n  if (req.extraFeatures) {\n    const missingFeatures = [];\n    for (const feature of req.extraFeatures) {\n      if (combined.extraFeatures.indexOf(feature) === -1) {\n        missingFeatures.push(feature);\n      }\n    }\n    if (missingFeatures.length) {\n      return [false, `Missing features: ${missingFeatures.join(', ')}`] as const;\n    }\n  }\n\n  if (req.extraFormats) {\n    const missingFormats = [];\n    for (const feature of req.extraFormats) {\n      if (combined.extraFormats.indexOf(feature) === -1) {\n        missingFormats.push(feature);\n      }\n    }\n    if (missingFormats.length) {\n      return [false, `Missing formats: ${missingFormats.join(', ')}`] as const;\n    }\n  }\n\n  if (req.extraQualities) {\n    const missingQualities = [];\n    for (const quality of req.extraQualities) {\n      if (combined.extraQualities.indexOf(quality) === -1) {\n        missingQualities.push(quality);\n      }\n    }\n    if (missingQualities.length) {\n      return [false, `Missing qualities: ${missingQualities.join(', ')}`] as const;\n    }\n  }\n\n  return [true] as const;\n}\n","import { ImageService } from '@iiif/presentation-3';\nimport { isImageService } from '../utilities/is-image-service';\nimport { level1Support, Profile } from './profiles';\n\nexport function supportsCustomSizes(service: ImageService): boolean {\n  if (!isImageService(service)) {\n    return false;\n  }\n\n  const profiles = Array.isArray(service.profile) ? service.profile : [service.profile];\n\n  for (const profile of profiles) {\n    if (typeof profile === 'string') {\n      if (level1Support.indexOf(profile) !== -1) {\n        return true;\n      }\n    } else {\n      const supports = [...(profile.supports || []), ...((profile as Profile).extraFeatures || [])];\n      if (\n        supports.indexOf('regionByPx') !== -1 &&\n        (supports.indexOf('sizeByW') !== -1 || supports.indexOf('sizeByWh') !== -1)\n      ) {\n        return true;\n      }\n    }\n  }\n\n  return false;\n}\n","import { ImageService } from '@iiif/presentation-3';\nimport { supports } from './supports';\n\nexport function imageServiceSupportsFormat(imageService: ImageService, format: string) {\n  return supports(imageService, {\n    extraFormats: [format],\n  });\n}\n","import { ImageService } from '@iiif/presentation-3';\nimport { ImageServiceImageRequest } from '../types';\nimport { supports } from './supports';\nimport { ExtraFeature } from './profiles';\n\nexport function imageServiceSupportsRequest(imageService: ImageService, request: ImageServiceImageRequest) {\n  if (request.type !== 'image') {\n    return [true];\n  }\n\n  const extraFeatures: ExtraFeature[] = [];\n\n  if (request.rotation.mirror) {\n    extraFeatures.push('mirroring');\n  }\n\n  if (request.region.percent) {\n    extraFeatures.push('regionByPct');\n  }\n\n  if (request.region.square) {\n    extraFeatures.push('regionSquare');\n  } else if (!request.region.full) {\n    extraFeatures.push('regionByPx');\n  }\n\n  if (request.rotation.angle) {\n    const remainder = request.rotation.angle % 90;\n    if (remainder) {\n      extraFeatures.push('rotationArbitrary');\n    } else {\n      extraFeatures.push('rotationBy90s');\n    }\n  }\n\n  if (request.size.confined) {\n    extraFeatures.push('sizeByConfinedWh');\n  }\n\n  if (!request.size.width && request.size.height) {\n    extraFeatures.push('sizeByH');\n  }\n\n  if (request.size.percentScale) {\n    extraFeatures.push('sizeByPct');\n  }\n\n  // Could we bail, and check sizes instead?\n  const fixedSize = (imageService.sizes || []).find(\n    (size) =>\n      (size.width === request.size.width && !request.size.height) ||\n      (size.height === request.size.height && !request.size.width) ||\n      (size.height === request.size.height && size.width === request.size.width)\n  );\n  if (fixedSize) {\n    extraFeatures.push('sizeByWhListed');\n  } else {\n    if (request.size.width && !request.size.height) {\n      extraFeatures.push('sizeByW');\n    }\n\n    if (request.size.width && request.size.height) {\n      extraFeatures.push('sizeByWh');\n    }\n  }\n\n  if (request.size.upscaled) {\n    extraFeatures.push('sizeUpscaling');\n  }\n\n  const [doesSupport, reason] = supports(imageService, {\n    extraFeatures,\n    extraQualities: [request.quality],\n    extraFormats: [request.format],\n    exactSize: request.size,\n  });\n\n  if (doesSupport) {\n    return [true] as const;\n  }\n\n  return [false, reason] as const;\n}\n","import { RegionParameter } from '../types';\n\nexport function regionParameterToString({ x = 0, y = 0, w, h, full, square, percent }: RegionParameter) {\n  if (full) {\n    return 'full';\n  }\n\n  if (square) {\n    return 'square';\n  }\n\n  if (typeof w === 'undefined' || typeof h === 'undefined') {\n    throw new Error('RegionParameter: invalid region');\n  }\n\n  const xywh = `${x},${y},${w},${h}`;\n  if (percent) {\n    return `pct:${xywh}`;\n  }\n\n  return xywh;\n}\n","import { SizeParameter } from '../types';\n\nexport function sizeParameterToString({\n  max,\n  percentScale,\n  upscaled,\n  confined,\n  width,\n  height,\n  serialiseAsFull,\n  version,\n}: SizeParameter): string {\n  const sb: string[] = [];\n\n  if (upscaled) {\n    sb.push('^');\n  }\n\n  if (max) {\n    sb.push(serialiseAsFull ? 'full' : 'max');\n    return sb.join('');\n  }\n\n  if (confined) {\n    sb.push('!');\n  }\n\n  if (percentScale) {\n    sb.push(`pct:${percentScale}`);\n  }\n\n  if (width) {\n    sb.push(`${width}`);\n  }\n\n  sb.push(',');\n\n  if (height && version === 3) {\n    sb.push(`${height}`);\n  }\n\n  return sb.join('');\n}\n","import { RotationParameter } from '../types';\n\nexport function rotationParameterToString(rotationParameter: RotationParameter) {\n  return `${rotationParameter.mirror ? '!' : ''}${(rotationParameter.angle || 0) % 360}`;\n}\n","import { ImageServiceImageRequest } from '../types';\nimport { regionParameterToString } from './region-parameter-to-string';\nimport { sizeParameterToString } from './size-parameter-to-string';\nimport { rotationParameterToString } from './rotation-parameter-to-string';\nimport { ImageService } from '@iiif/presentation-3';\n\nexport function imageServiceRequestToString(req: ImageServiceImageRequest, service?: ImageService): string {\n  const prefix = req.prefix.startsWith('/') ? req.prefix.substring(1) : req.prefix;\n  const baseUrl = `${req.scheme}://${req.server}/${prefix ? `${prefix}/` : ''}${req.identifier}`;\n\n  if (req.type === 'base') {\n    return baseUrl;\n  }\n\n  if (req.type === 'info') {\n    return `${baseUrl}/info.json`;\n  }\n\n  let { size } = req;\n  const { region, rotation, format, quality } = req;\n\n  if (service) {\n    // Service specific changes.\n    const ctx = service['@context']\n      ? Array.isArray(service['@context'])\n        ? service['@context']\n        : [service['@context']]\n      : [];\n    const is2 = ctx.indexOf('http://iiif.io/api/image/2/context.json') !== -1;\n    const is3 = ctx.indexOf('http://iiif.io/api/image/3/context.json') !== -1;\n\n    // max size, for canonical.\n    if (\n      (size.width === service.width && !size.height) ||\n      (size.height === service.height && !size.width) ||\n      (size.width === service.width && size.height === service.height)\n    ) {\n      size = { ...size, max: true };\n    }\n\n    if (is2) {\n      if (size.max && !size.serialiseAsFull) {\n        size = { ...size, serialiseAsFull: true };\n      }\n\n      if (!size.max && size.width && size.height) {\n        size = { ...size, height: undefined };\n      }\n\n      size = { ...size, version: 2 };\n    }\n    if (is3) {\n      if (size.max && size.serialiseAsFull) {\n        size = { ...size, serialiseAsFull: false };\n      }\n\n      if (size.width && !size.height && service.width && service.height) {\n        // canonical requires height.\n        const ratio = service.height / service.width;\n        size = { ...size, height: Math.ceil(size.width * ratio) };\n      }\n\n      size = { ...size, version: 3 };\n    }\n\n    // @todo FUTURE - possibly passing in a correct=true option\n    // 1. Closeness/rounding to fixed size\n    // 2. Fallback to supported format.\n    // 3. Round to rotation\n  }\n\n  return [\n    baseUrl,\n    regionParameterToString(region),\n    sizeParameterToString(size),\n    rotationParameterToString(rotation),\n    `${quality}.${format}`,\n  ]\n    .filter(Boolean)\n    .join('/');\n}\n","import { ImageService } from \"@iiif/presentation-3\";\nimport { ImageServiceImageRequest } from \"../types\";\nimport { imageServiceRequestToString } from \"./image-service-request-to-string\";\n\nexport function imageServiceRequestInfo(req: ImageServiceImageRequest, service?: ImageService): string {\n  return imageServiceRequestToString({ ...req, type: 'info' }, service);\n}","/**\n * Get canonical service url\n * Ensures an image service id contains the /info.json on the end of it.\n *\n * @param serviceId\n */\nexport function canonicalServiceUrl(serviceId: string) {\n  return serviceId.endsWith('info.json')\n    ? serviceId\n    : serviceId.endsWith('/')\n    ? `${serviceId}info.json`\n    : `${serviceId}/info.json`;\n}\n","import { ImageService } from '@iiif/presentation-3';\nimport { ImageServiceImageRequest } from '../types';\nimport { combineProfiles } from '../profiles/combine-profiles';\nimport { parseImageServiceRequest } from '../parser/parse-image-service-request';\nimport { canonicalServiceUrl } from './canonical-service-url';\n\nexport function createImageServiceRequest(imageService: ImageService): ImageServiceImageRequest {\n  const parsed = parseImageServiceRequest(canonicalServiceUrl(imageService.id));\n  if (parsed.type !== 'info') {\n    throw new Error('Invalid service URL');\n  }\n\n  const features = combineProfiles(imageService);\n\n  return {\n    identifier: parsed.identifier,\n    originalPath: '',\n    server: parsed.server,\n    prefix: parsed.prefix,\n    scheme: parsed.scheme,\n    type: 'image',\n    quality: features.extraQualities.indexOf('default') === -1 ? features.extraQualities[0]! : 'default',\n    region: {\n      full: true,\n    },\n    size: {\n      max: true,\n      upscaled: false,\n      confined: false,\n    },\n    format: 'jpg',\n    rotation: {\n      angle: 0,\n    },\n  };\n}\n","import { ImageSize } from '@iiif/presentation-3';\n\n/**\n * Extract fixed size scales\n *\n * Given a source width and height and a list of sizes of that same image,\n * it will return an ordered list of scales.\n *\n * @param width\n * @param height\n * @param sizes\n */\nexport function extractFixedSizeScales(width: number, height: number, sizes: ImageSize[]): number[] {\n  const len = sizes.length;\n  const scales = [];\n  for (let i = 0; i < len; i++) {\n    const size = sizes[i];\n    if (!size) continue;\n    const w = size.width;\n    scales.push(width / w);\n  }\n  return scales;\n}\n","import { ImageSize } from '@iiif/presentation-3';\n\n/**\n * Fixed sizes from scales.\n *\n * Given a width and height of an image and a list of scales, this will return\n * an ordered list of widths and heights of the image at those scales.\n *\n * @param width\n * @param height\n * @param scales\n */\nexport function fixedSizesFromScales(width: number, height: number, scales: number[]): ImageSize[] {\n  const len = scales.length;\n  const sizes: ImageSize[] = [];\n  for (let i = 0; i < len; i++) {\n    const scale = scales[i];\n    if (!scale) continue;\n    sizes.push({\n      width: Math.floor(width / scale),\n      height: Math.floor(height / scale),\n    });\n  }\n  return sizes;\n}\n","import { ImageService } from '@iiif/presentation-3';\nimport { level1Support, level2Support, onlyLevel0 } from '../profiles/profiles';\n\nexport function isImageServiceLevel(level: 0 | 1 | 2, imageService?: ImageService) {\n  if (imageService && imageService.profile) {\n    const profile = imageService.profile;\n    if (profile) {\n      const profileArray = Array.isArray(profile) ? profile : [profile];\n\n      if (\n        profileArray.includes(`level${level}`) ||\n        profileArray.includes(`http://iiif.io/api/image/2/level${level}.json`) ||\n        profileArray.includes(`http://iiif.io/api/image/1/level${level}.json`) ||\n        profileArray.includes(`http://iiif.io/api/image/1/profiles/level${level}.json`)\n      ) {\n        return true;\n      }\n\n      if (level === 2) {\n        for (let singleProfile of profileArray) {\n          if (level2Support.includes(singleProfile as string)) {\n            return true;\n          }\n        }\n      }\n\n      if (level === 1) {\n        for (let singleProfile of profileArray) {\n          if (level1Support.includes(singleProfile as string)) {\n            return true;\n          }\n        }\n      }\n\n      if (level === 0) {\n        for (let singleProfile of profileArray) {\n          if (onlyLevel0.includes(singleProfile as string)) {\n            return true;\n          }\n        }\n      }\n    }\n  }\n\n  return false;\n}\n","import { ImageService } from '@iiif/presentation-3';\nimport { isImageServiceLevel } from './is-image-service-level';\nimport { isImageService } from './is-image-service';\n\nexport function getImageServiceLevel(service: ImageService): null | number {\n  if (!isImageService(service)) {\n    return null;\n  }\n  if (isImageServiceLevel(2, service)) {\n    return 2;\n  }\n  if (isImageServiceLevel(1, service)) {\n    return 1;\n  }\n  if (isImageServiceLevel(0, service)) {\n    return 0;\n  }\n  return null;\n}\n","import { ImageService, Service } from '@iiif/presentation-3';\nimport { isImageService } from './is-image-service';\n\n/**\n * Given a resource, will return only the image services on that resource.\n *\n * @param resource\n */\nexport function getImageServices(resource: { service?: Array<Service> }): ImageService[] {\n  const services = resource.service ? (Array.isArray(resource.service) ? resource.service : [resource.service]) : [];\n  const totalServices = services.length;\n  const imageServices = [];\n  for (let i = 0; i < totalServices; i++) {\n    if (isImageService((services as ImageService[])[i])) {\n      imageServices.push(services[i]);\n    }\n  }\n  return imageServices as any;\n}\n","export function getType(resource: any) {\n  if (resource['@type']) {\n    return resource['@type'];\n  }\n  if (resource.type) {\n    return resource.type;\n  }\n\n  return undefined;\n}\n","/**\n * Get image server from ID.\n *\n * Normalises image service URLs to extract identity of the image server.\n *\n * @param url\n */\nexport function identifyImageServer(url: string): string {\n  // Strip off the protocol + www\n  const id = url.replace(/(https?:\\/\\/)?(www.)?/i, '');\n\n  // Strip off the path.\n  if (id.indexOf('/') !== -1) {\n    return id.split('/')[0]!;\n  }\n\n  // Return the id.\n  return id;\n}\n"],"mappings":"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"}