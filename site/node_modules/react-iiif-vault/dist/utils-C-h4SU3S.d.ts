import { m as UseRenderingStrategy, U as UnknownStrategy, R as RenderingStrategy, d as ImageServiceLoaderType } from './useRenderingStrategy-BiuSDiXu.js';
import { CanvasNormalized } from '@iiif/presentation-3-normalized';
import { Paintables } from '@iiif/helpers/painting-annotations';
import * as _iiif_helpers_vault from '@iiif/helpers/vault';
import { ContentResource, W3CAnnotationTarget, PointSelector } from '@iiif/presentation-3';
import { TemporalBoxSelector, BoxSelector, SupportedTarget } from '@iiif/helpers';

/**
 * Parse specific resource.
 *
 * This could be expanded to support pulling out more from the specific resource.
 *
 * @param resource
 */
declare function parseSpecificResource(resource: ContentResource): any[];
declare function getParsedTargetSelector(canvas: CanvasNormalized, target: W3CAnnotationTarget | W3CAnnotationTarget[]): [TemporalBoxSelector | BoxSelector | PointSelector | null, SupportedTarget['source']];
declare const emptyActions: {
    makeChoice: () => void;
};
declare const unknownResponse: UseRenderingStrategy[0];
declare const unsupportedStrategy: (reason: string) => UnknownStrategy;
declare const emptyStrategy: (width: number, height: number) => UseRenderingStrategy[0];

type CompatVault = {
    get: _iiif_helpers_vault.Vault['get'];
    setMetaValue: _iiif_helpers_vault.Vault['setMetaValue'];
    getResourceMeta: _iiif_helpers_vault.Vault['getResourceMeta'];
    load: _iiif_helpers_vault.Vault['load'];
    requestStatus: _iiif_helpers_vault.Vault['requestStatus'];
};

interface GetRenderStrategyOptions {
    canvas: CanvasNormalized | null | undefined;
    paintables: Paintables;
    supports: string[];
    loadImageService: ImageServiceLoaderType;
    vault?: CompatVault;
}
declare function getRenderingStrategy({ canvas, paintables, supports, loadImageService, vault, }: GetRenderStrategyOptions): RenderingStrategy;

export { type CompatVault as C, unsupportedStrategy as a, emptyStrategy as b, getRenderingStrategy as c, emptyActions as e, getParsedTargetSelector as g, parseSpecificResource as p, unknownResponse as u };
